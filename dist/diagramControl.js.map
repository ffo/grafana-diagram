{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","info","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","panelDefaults","composites","seriesOverrides","decimals","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","format","valueName","valueOptions","valueMaps","mappingTypes","name","content","mode","mermaidServiceUrl","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","$http","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","mermaidAPI","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","mappingEditor","$","document","getElementById","dataList","series","map","seriesHandler","setValues","updateDiagram","seriesData","datapoints","alias","target","replace","unit","flotpairs","getFlotPairs","override","push","without","render","composite","ctrl","metrics","undefined","metric","mapping","type","valueToText","rangeToText","valueMap","thresholdCount","colorCount","refresh","colorIndex","splice","subItem","remove","svg","updateDiagram_cont","graphDefinition","substituteHashPrefixedNotation","templateSrv","replaceWithText","diagramType","detectType","diagramContainer","renderCallback","svgCode","bindFunctions","html","svgData","clearDiagram","templatedURL","scopedVars","me","method","url","then","successCallback","response","call","errorCallback","warn","matches","match","aMatch","valueType","substring","j","aComposite","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","last","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","applyValueMapping","worstMetric","getWorstMetric","worstSeries","seriesName","worstDisplayName","displayName","isSeriesWorse","series1","series2","series1thresholdLevel","getThresholdLevel","series2thresholdLevel","thresholdLevel","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","stringToJsRegex","split","strVale","Number","trim","slice","reverse","unitFormat","hasOwnProperty","dataItem","valueMapping","text","parseFloat","rangeToTexts","from","rangeNapping","to","isNumber","delta","dec","floor","log","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","setElementHeight","updateCanvasStyle","updateStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","renderingCompleted","key","targetElement","d3","select","selectAll","style","div","fo","attr","classed","filter","parents","edgeElement","parent","addClass","dElement","templateUrl"],"mappings":"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","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport {diagramEditor, displayEditor, compositeEditor} from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_diagram_ctrl';\r\nimport './css/diagram.css!';\n\r\nconst panelDefaults = {\r\n  composites: [],\r\n\t// other style overrides\r\n  seriesOverrides: [],\r\n\tthresholds: '0,10',\r\n  decimals: 2, // decimal precision\n\tcolors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n\tlegend: {\r\n\t\tshow: true,\r\n\t\tmin: true,\r\n\t\tmax: true,\r\n\t\tavg: true,\r\n\t\tcurrent: true,\r\n\t\ttotal: true,\r\n\t\tgradient: {\r\n\t\t\tenabled: true,\r\n\t\t\tshow: true\r\n\t\t}\r\n\t},\r\n\tmaxDataPoints: 100,\r\n\tmappingType: 1,\r\n\tmaxWidth: false,\r\n\tnullPointMode: 'connected',\r\n\tformat: 'none',\r\n\tvalueName: 'avg',\r\n\tvalueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n    valueMaps: [\r\n    ],\r\n\tmappingTypes: [\n\t\t{name: 'value to text', value: 1},\n\t\t{name: 'range to text', value: 2},\n\t],\n    content: 'graph LR\\n' +\r\n\t\t'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n\t\t'A --> C(Round Rect)\\n' +\r\n\t\t'B --> D{Rhombus}\\n' +\r\n\t\t'C --> D\\n',\r\n\tmode: 'content', //allowed values: 'content' and 'url'\r\n\tmermaidServiceUrl : '',\r\n\tinit: {\r\n\t\tlogLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\r\n    \tcloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\r\n\t\tstartOnLoad: false, // - This options controls whether or mermaid starts when the page loads\r\n\t\tarrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\r\n\t\tflowchart: {\r\n\t\t\thtmlLabels: true,\r\n\t\t\tuseMaxWidth: true\r\n\t\t},\r\n\t\tsequenceDiagram: {\r\n\t\t\tdiagramMarginX: 50, // - margin to the right and left of the sequence diagram\r\n\t\t\tdiagramMarginY: 10, // - margin to the over and under the sequence diagram\r\n\t\t\tactorMargin: 50, // - Margin between actors\r\n\t\t\twidth: 150, // - Width of actor boxes\r\n\t\t\theight: 65, // - Height of actor boxes00000000001111\r\n\t\t\tboxMargin: 10, // - Margin around l01oop boxes\r\n\t\t\tboxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\r\n\t\t\tnoteMargin: 10, // - margin around notes\r\n\t\t\tmessageMargin: 35, // - Space between messages\r\n\t\t\tmirrorActors: true, // - mirror actors under diagram\r\n\t\t\tbottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\r\n\t\t\tuseMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\r\n\t\t},\r\n\t\tgantt: {\r\n\t\t\ttitleTopMargin: 25, // - margin top for the text over the gantt diagram\r\n\t\t\tbarHeight: 20, // - the height of the bars in the graph\r\n\t\t\tbarGap: 4, // - the margin between the different activities in the gantt diagram\r\n\t\t\ttopPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\r\n\t\t\tleftPadding: 75, // - the space allocated for the section name to the left of the activities.\r\n\t\t\tgridLineStartPadding: 35, // - Vertical starting position of the grid lines\r\n\t\t\tfontSize: 11, // - font size ...\r\n\t\t\tfontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\r\n\t\t\tnumberSectionStyles: 3, // - the number of alternating section styles\r\n\t\t\t/** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\r\n\t\t\t\t[\r\n\t\t        // Within a day\r\n\t\t        ['%I:%M', function (d) {\r\n\t\t            return d.getHours();\r\n\t\t        }],\r\n\t\t        // Monday a week\r\n\t\t        ['w. %U', function (d) {\r\n\t\t            return d.getDay() == 1;\r\n\t\t        }],\r\n\t\t        // Day within a week (not monday)\r\n\t\t        ['%a %d', function (d) {\r\n\t\t            return d.getDay() && d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // within a month\r\n\t\t        ['%b %d', function (d) {\r\n\t\t            return d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // Month\r\n\t\t        ['%m-%y', function (d) {\r\n\t\t            return d.getMonth();\r\n\t\t        }]] **/\r\n\t\t},\r\n\t\t//classDiagram: {},\r\n    \t//info: {}\r\n\t}\r\n};\r\n\r\nclass DiagramCtrl extends MetricsPanelCtrl {\r\n\tconstructor($scope, $injector, $sce, $http) {\r\n\t\tsuper($scope, $injector);\r\n\t\t_.defaults(this.panel, panelDefaults);\r\n\t\tthis.$http = $http;\r\n\t\tthis.panel.graphId = 'diagram_' + this.panel.id;\r\n\t\tthis.containerDivId = 'container_'+this.panel.graphId;\r\n\t\tthis.$sce = $sce;\r\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\r\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n\t\tthis.unitFormats = kbn.getUnitFormats();\r\n\t\tthis.initializeMermaid();\r\n\t}\r\n\r\n\tinitializeMermaid(){\r\n\t\tmermaidAPI.initialize(this.panel.init);\r\n\t\tmermaidAPI.parseError = this.handleParseError.bind(this);\r\n\t}\r\n\r\n\thandleParseError(err, hash){\r\n\t\tthis.error = 'Failed to parse diagram definition';\r\n\t\tthis.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\r\n\t}\r\n\r\n\tonInitEditMode() {\r\n\t\tthis.addEditorTab('Diagram', diagramEditor, 2);\r\n\t\tthis.addEditorTab('Display', displayEditor, 3);\r\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\r\n    this.addEditorTab('Value Mappings', mappingEditor, 5);\r\n\t}\r\n\r\n\tgetDiagramContainer(){\r\n\t\treturn $(document.getElementById(this.containerDivId));\r\n\t}\r\n\r\n\tonDataReceived(dataList){\r\n\t\tconsole.info('received data');\r\n\t\tconsole.debug(dataList);\r\n\t\tthis.series = dataList.map(this.seriesHandler.bind(this));\r\n\t\tconsole.info('mapped dataList to series');\r\n\t\tconsole.debug(this.series);\r\n\r\n\t\tvar data = {};\r\n\t\tthis.setValues(data);\r\n\t\tthis.updateDiagram(data);\r\n\t}\r\n\r\n\tseriesHandler(seriesData) {\r\n\t\tvar series = new TimeSeries({\r\n\t\t\tdatapoints: seriesData.datapoints,\r\n\t\t\talias: seriesData.target.replace(/\"|,|;|=|:|{|}/g, '_'),\r\n      \t\tunit: seriesData.unit\r\n\t\t});\r\n\t    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\t    return series;\r\n\t} // End seriesHandler()\r\n\r\n\taddSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides.push(override || {});\r\n\t}\r\n\r\n\tremoveSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n\t    this.render();\r\n\t}\r\n\r\n  addComposite(composite) {\r\n\t\tthis.panel.composites.push(composite || {});\r\n\t}\r\n  removeComposite(composite) {\r\n\t\tthis.panel.composites = _.without(this.panel.composites, composite);\r\n\t  this.render();\r\n\t}\r\n  getSeriesNamesForComposites() {\r\n    return _.map(this.$scope.ctrl.series, function(series) {\r\n      return series.alias;\r\n    });\r\n  }\r\n\r\n  addMetricToComposite(composite) {\r\n    if (composite.metrics === undefined) {\r\n      composite.metrics = [{}];\r\n    }\r\n    else {\r\n      composite.metrics.push({});\r\n    }\r\n  }\r\n  removeMetricFromComposite(composite, metric) {\r\n    composite.metrics = _.without(composite.metrics, metric);\r\n  }\n\n\taddValueMapping(mapping) {\n\t\tthis.panel.valueMaps.push(mapping || {});\n\t}\n\n\tremoveValueMapping(mapping) {\n\t\tthis.panel.valueMaps = _.without(this.panel.valueMaps, mapping);\n\t}\n\t\n\taddEntryToValueMapping(mapping) {\n\t\tif (mapping.type == 1) {\n\t\t\tif (mapping.valueToText === undefined) {\n\t\t\t\tmapping.valueToText = [{}];\n\t\t\t} else {\n\t\t\t\tmapping.valueToText.push({});\n\t\t\t}\n\t\t} else if (mapping.type == 2) {\n\t\t\tif (mapping.rangeToText === undefined) {\n\t\t\t\tmapping.rangeToText = [{}];\n\t\t\t} else {\n\t\t\t\tmapping.rangeToText.push({});\n\t\t\t}\n\t\t}\n\t}\n\n\tremoveEntryFromValueMapping(valueMap, mapping) {\n\t\tif (valueMap.type == 1) {\n\t\t\tvalueMap.valueToText = _.without(valueMap.valueToText, mapping);\n\t\t} else if (valueMap.type == 2) {\n\t\t\tvalueMap.rangeToText = _.without(valueMap.rangeToText, mapping);\n\t\t}\n\t}\n\n\r\n\tupdateThresholds(){\r\n\t\tvar thresholdCount = this.panel.thresholds.length;\r\n\t\tvar colorCount = this.panel.colors.length;\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\tchangeColor(colorIndex, color){\r\n\t\tthis.panel.colors[colorIndex] = color;\r\n\t}\r\n\r\n\tremoveColor(colorIndex){\r\n\t\tthis.panel.colors.splice(colorIndex,1);\r\n\t}\r\n\r\n\taddColor(){\r\n\t\tthis.panel.colors.push('rgba(255, 255, 255, 1)');\r\n\t}\r\n\r\n\tsetUnitFormat(subItem) {\r\n\t\tthis.panel.format = subItem.value;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tclearDiagram(){\r\n\t\t$('#'+this.panel.graphId).remove();\r\n\t\tthis.svg = {};\r\n\t}\r\n\r\n\tupdateDiagram(data){\r\n\t\tif(this.panel.content.length > 0){\r\n\t\t\tthis.clearDiagram();\r\n\n\t\t\tvar mode = this.panel.mode;\r\n\t\t\tvar templatedURL = this.templateSrv.replace(this.panel.mermaidServiceUrl, this.panel.scopedVars);\r\n\n      function updateDiagram_cont(graphDefinition) {\n        // substitute values inside \"link text\"\r\n        // this will look for any composite prefixed with a # and substitute the value of the composite\r\n        // if a series alias is found, in the form #alias, the value will be substituted\r\n        // this allows link values to be displayed based on the metric\r\n        graphDefinition = this.substituteHashPrefixedNotation(graphDefinition, data);\r\n        graphDefinition = this.templateSrv.replaceWithText(graphDefinition);\r\n        this.diagramType = mermaidAPI.detectType(graphDefinition);\r\n        var diagramContainer = $(document.getElementById(this.containerDivId));\r\n  \r\n        var renderCallback = function (svgCode, bindFunctions){\r\n          if(svgCode === '') {\r\n            diagramContainer.html('There was a problem rendering the graph');\r\n          } else {\r\n                diagramContainer.html(svgCode);\r\n            bindFunctions(diagramContainer[0]);\r\n          }\r\n        };\r\n        // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\r\n        mermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\r\n\t\t\t  this.svgData = data;\r\n\t\t    this.render();\r\n      }\n\n\t\t\tif(mode == 'url') {\r\n\t\t\t\tvar me = this;\r\n\t\t\t\tthis.$http({\r\n\t\t\t\t\tmethod: 'GET',\r\n\t\t\t\t\turl: templatedURL\r\n\t\t\t\t}).then(function successCallback(response) {\r\n\t\t\t\t\t//the response must have text/plain content-type\r\n//\t\t\t\t\tconsole.info(response.data);\r\n          updateDiagram_cont.call(me, response.data);\n\t\t\t\t}, function errorCallback(response) {\r\n\t\t\t\t\tconsole.warn('error', response);\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n        updateDiagram_cont.call(this, this.panel.content);\n\t\t\t}\r\n\t\t}\r\n\t} // End updateDiagram()\r\n\n\n\r\n  /**\r\n   * substitute values inside \"link text\"\r\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\r\n   * if a series alias is found, in the form #alias, the value will be substituted\r\n   * this allows link values to be displayed based on the metric\r\n   *\r\n   * Prefix Modifier For Composites\r\n   *   # Raw Value of Series\r\n   *   ! Raw Value plus Metric Name\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\r\n   *\r\n   * Prefix Modifier For Series\r\n   *   # Raw Value of Series\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *\r\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\r\n   * @param  {[Array]} data [Series Data]\r\n   * @return {[String]} [Modified Graph Definition]\r\n   */\r\n  substituteHashPrefixedNotation(graphDefinition, data) {\r\n    // inspect the string, locate all # prefixed items, and replace them with the value\r\n    // of the series. If no matching series is found, leave it alone\r\n    var matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\r\n    if (matches === null) return graphDefinition;\r\n    // check if there is a composite with a matching name\r\n    for (var i = 0; i < matches.length; i++) {\r\n      var aMatch = matches[i];\r\n      var valueType = aMatch[0];\r\n      aMatch = aMatch.substring(1);\r\n      // check composites first\r\n      for (var j = 0; j < this.panel.composites.length; j++) {\r\n        var aComposite = this.panel.composites[j];\r\n        if (aComposite.name === aMatch) {\r\n          // found matching composite, get the valueFormatted\r\n          //var displayedValue = data[aComposite.name].value;\r\n          var displayedValue = null;\r\n          switch (valueType) {\r\n            case '#':\r\n              displayedValue = data[aComposite.name].value;\r\n              graphDefinition = graphDefinition.replace('#'+aMatch, displayedValue);\r\n              break;\r\n            case '!':\r\n              displayedValue = data[aComposite.name].valueRawFormattedWithPrefix;\r\n              graphDefinition = graphDefinition.replace('!'+aMatch, displayedValue);\r\n              break;\r\n            case '@':\r\n              displayedValue = data[aComposite.name].valueFormatted;\r\n              graphDefinition = graphDefinition.replace('@'+aMatch, displayedValue);\r\n              break;\r\n            case '&':\r\n              displayedValue = data[aComposite.name].valueFormattedWithPrefix;\r\n              graphDefinition = graphDefinition.replace('&'+aMatch, displayedValue);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n      // next check series\r\n      for(var k = 0; k < this.series.length; k++){\r\n\t\t\t\tvar seriesItem = this.series[k];\r\n        if (seriesItem.alias === aMatch) {\r\n          var displayedValue = null;\r\n          switch (valueType) {\r\n            case '#':\r\n              displayedValue = data[seriesItem.alias].value;\r\n              graphDefinition = graphDefinition.replace('#'+aMatch, displayedValue);\r\n              break;\r\n            case '@':\r\n              displayedValue = data[seriesItem.alias].valueFormatted;\r\n              graphDefinition = graphDefinition.replace('@'+aMatch, displayedValue);\r\n              break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return graphDefinition;\r\n  }\r\n\t\r\n\trenderDiagram(data, graphDefinition) {\r\n\t\tconsole.info(graphDefinition);\r\n\t\tgraphDefinition = this.templateSrv.replace(graphDefinition);\r\n\t\tconsole.info(graphDefinition);\r\n\t\tthis.diagramType = mermaidAPI.detectType(graphDefinition);\r\n\t\tvar diagramContainer = $(document.getElementById(this.containerDivId));\r\n\t\t\r\n\t\tvar renderCallback = function (svgCode, bindFunctions){\r\n\t\t\tif(svgCode == '') {\r\n\t\t\t\tdiagramContainer.html('There was a problem rendering the graph');\r\n\t\t\t} else {\r\n\t\t\t\tdiagramContainer.html(svgCode);\r\n\t\t\t\tbindFunctions(diagramContainer[0]);\r\n\t\t\t}\r\n\t\t};\r\n\t\t// if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\r\n\t\tmermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\r\n\t\tthis.svgData = data;\r\n\t\tthis.render();\r\n\t}\r\n\t\r\n\n\tsetValues(data) {\r\n\t    if (this.series && this.series.length > 0) {\r\n\t\t\tfor(var i = 0; i < this.series.length; i++){\r\n\t\t\t\tvar seriesItem = this.series[i];\r\n\t\t\t\tconsole.debug('setting values for series');\r\n\t\t\t\tconsole.debug(seriesItem);\r\n\t\t\t\tdata[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\r\n\t\t\t\tvar lastPoint = _.last(seriesItem.datapoints);\r\n\t\t\t    var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\r\n\r\n\t\t\t\tif (this.panel.valueName === 'name') {\r\n\t\t\t\t\tdata[seriesItem.alias].value = 0;\r\n\t\t\t        data[seriesItem.alias].valueRounded = 0;\r\n\t\t\t        data[seriesItem.alias].valueFormated = seriesItem.alias;\r\n\t\t\t\t} else if (_.isString(lastValue)) {\r\n\t\t\t        data[seriesItem.alias].value = 0;\r\n\t\t\t        data[seriesItem.alias].valueFormated = _.escape(lastValue);\r\n\t\t\t        data[seriesItem.alias].valueRounded = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\r\n\t\t\t        //data[seriesItem.alias].flotpairs = seriesItem.flotpairs;\r\n\r\n\t\t\t        var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\r\n\t\t\t        var formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\r\n              // put the value in quotes to escape \"most\" special characters\r\n\t\t\t        data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n\t\t\t        data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.panel.legend.gradient.enabled){\r\n\t\t\t\t\tdata[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    }\r\n\n\t\t\t// Map values to text\n\t\t\tthis.applyValueMapping(data);\n\n      // now add the composites to data\r\n      for (var i = 0; i < this.panel.composites.length; i++) {\r\n        var aComposite = this.panel.composites[i];\r\n   \t\t\tvar worstMetric = this.getWorstMetric(aComposite, data);\n\t  \t\tvar worstSeries = data[worstMetric.seriesName];\n\t  \t\tvar worstDisplayName = worstMetric.displayName;\n\t  \t\tif (worstDisplayName == undefined) {\n\t  \t\t\tworstDisplayName = worstMetric.seriesName;\n\t  \t\t}\n\t\t\t\n\t  \t\tconsole.info(\"composite '\" +aComposite.name +\"': worstMetric=\" +worstMetric.seriesName +\", worstSeries:\" +worstSeries);\n\n\t  \t\tif ( worstSeries != undefined) {\n\t  \t\t\t// Prefix the valueFormatted with the actual metric name\n\t  \t\t\tworstSeries.valueFormattedWithPrefix = worstDisplayName+ ': ' + worstSeries.valueFormatted;\n\t  \t\t\tworstSeries.valueRawFormattedWithPrefix = worstDisplayName + ': ' + worstSeries.value;\n\t  \t\t\tworstSeries.valueFormatted = worstDisplayName + ': ' + worstSeries.valueFormatted;\n\n\t  \t\t\t// now push the composite into data\n\t  \t\t \tdata[aComposite.name] = worstSeries;\n\t  \t\t}\n      }\r\n\t} // End setValues()\r\n\r\n  getWorstMetric(composite, data) {\n\t  var worstMetric = undefined;\n\t  for(var i = 0; i < composite.metrics.length; i++) {\n\t\t  var metric = composite.metrics[i];\n\t\t  if (worstMetric == undefined || this.isSeriesWorse(data[worstMetric.seriesName], data[metric.seriesName])) {\n\t\t\t  worstMetric = metric;\n\t\t  }\n\t  }\n \t  console.info(\"getWorstMetric('\" +composite.name +\"'): \" +worstMetric.seriesName);\n\t  return worstMetric;\n  }\n\n\n\tisSeriesWorse(series1, series2) {\n\t  if (series1 == undefined) {\n\t\t  return true;\n\t  }\n\t  if (series2 == undefined) {\n\t  \treturn false;\n\t\t}\n\n\t\tvar series1thresholdLevel = this.getThresholdLevel(series1);\n\t\tvar series2thresholdLevel = this.getThresholdLevel(series2);\n\t\treturn series1thresholdLevel == undefined || series2thresholdLevel > series1thresholdLevel;\n\t}\n\n  getThresholdLevel(series) {\n\t\tvar value = series.value;\n\t\tvar thresholds = series.colorData.thresholds;\n\t\t// ok if no thresholds are defined\n  \t\tif (thresholds === undefined) {\n  \t\treturn 0;\n  \t}\n\t\t// check thresholds in reverse order\n \t\tfor (var i = thresholds.length; i > 0; i--) {\n \t\t\tif (value >= thresholds[i - 1]) {\n \t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\t// defaults to ok\n\t\treturn 0;\n\t}\n\r\n  // returns level of threshold, 0 = ok, 1 = warnimg, 2 = critical\r\n  getThesholdLevel(series) {\r\n    // default to ok\r\n    var thresholdLevel = 0;\r\n    var value = series.value;\r\n    var thresholds = series.colorData.thresholds;\r\n    // if no thresholds are defined, return 0\r\n    if (thresholds === undefined) {\r\n      return thresholdLevel;\r\n    }\r\n    // make sure thresholds is an array of size 2\r\n    if (thresholds.length !== 2) {\r\n      return thresholdLevel;\r\n    }\r\n    if (value >= thresholds[0]) {\r\n      // value is equal or greater than first threshold\r\n      thresholdLevel = 1;\r\n    }\r\n    if (value >= thresholds[1]) {\r\n      // value is equal or greater than second threshold\r\n      thresholdLevel = 2;\r\n    }\r\n    return thresholdLevel;\r\n  }\r\n\r\n\tgetGradientForValue(data, value){\r\n\t\tconsole.info('Getting gradient for value');\r\n\t\tconsole.debug(data);\r\n\t\tconsole.debug(value);\r\n\t\tvar min = Math.min.apply(Math, data.thresholds);\r\n\t\tvar max = Math.max.apply(Math, data.thresholds);\r\n\t\tvar absoluteDistance = max - min;\r\n\t\tvar valueDistanceFromMin = value - min;\r\n\t\tvar xPercent = valueDistanceFromMin/absoluteDistance;\r\n\t\t// Get the smaller number to clamp at 0.999 max\r\n\t\txPercent = Math.min(0.999, xPercent);\r\n\t\t// Get the larger number to clamp at 0.001 min\r\n\t\txPercent = Math.max(0.001, xPercent);\r\n\t\tif(data.invertColors){\r\n\t\t\txPercent = 1-xPercent;\r\n\t\t}\r\n\r\n\t\treturn getColorByXPercentage(this.canvas, xPercent);\r\n\t}\r\n\r\n\tapplyOverrides(seriesItemAlias){\r\n\t\tvar seriesItem = {}, colorData = {}, overrides = {};\r\n\r\n\t\tconsole.info('applying overrides for seriesItem');\r\n\t\tconsole.debug(seriesItemAlias);\r\n\t\tconsole.debug(this.panel.seriesOverrides);\r\n\t\tfor(var i=0; i<=this.panel.seriesOverrides.length; i++){\r\n\t\t\tconsole.debug('comparing:');\r\n\t\t\tconsole.debug(this.panel.seriesOverrides[i]);\r\n\r\n\t\t\tif (this.panel.seriesOverrides[i]){\r\n\t\t\t\tvar regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\r\n\t\t\t\tvar matches = seriesItemAlias.match(regex);\r\n\t\t\t\tif(matches && matches.length > 0){\r\n\t\t\t\t\toverrides = this.panel.seriesOverrides[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\r\n\t\t\treturn Number(strVale.trim());\r\n\t\t});\r\n\t\tcolorData.colorMap = this.panel.colors.slice();\r\n\t\tcolorData.invertColors = overrides.invertColors || false;\r\n\t\tif(colorData.invertColors){\r\n\t\t\tcolorData.colorMap.reverse();\r\n\t\t}\r\n\t\tseriesItem.colorData = colorData;\r\n\r\n\t\tseriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\r\n    seriesItem.format = overrides.unitFormat || this.panel.format;\r\n\t\treturn seriesItem;\r\n\t}\r\n\r\n\tapplyValueMapping(data) {\n\t\tfor (let i = 0; i < this.panel.valueMaps.length; i++) {\n\t\t\tvar map = this.panel.valueMaps[i];\n\t\t\tif (! map.hasOwnProperty('alias'))\n\t\t\t\tcontinue;\n\t\t\tvar regex = kbn.stringToJsRegex(map.alias);\n\t\t\tconsole.info(\"Checking mapping: \" +map.alias);\n\t\t\tfor(let j = 0; j < this.series.length; j++) {\n\t\t\t\tvar matches = this.series[j].alias.match(regex);\n\t\t\t\tconsole.info(\"  Series: \" +this.series[j].alias);\n\t\t\t\tif (matches && matches.length > 0) {\n\t\t\t\t\tvar seriesItem = this.series[j];\n\t\t\t\t\tvar dataItem = data[seriesItem.alias];\n\t\t\t\t\tif (map.type == 1) {\n\t\t\t\t\t\tfor(let k = 0; k < map.valueToText.length; k++) {\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\t// Value mappings\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\tvar valueMapping = map.valueToText[k];\n\t\t\t\t\t\t\t\tconsole.info(\"    Mapping: \" +dataItem.valueFormatted +\" =? \" +valueMapping.value);\n\t\t\t\t\t\t\t\tif (valueMapping.value === 'null') {\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} else if (parseFloat(valueMapping.value) == dataItem.valueRounded) {\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\n\t\t\t\t\t\t\t\t\tconsole.info(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +valueMapping.text);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (map.type == 2) {\n\t\t\t\t\t\tfor(let k = 0; k < map.rangeToTexts.length; k++) {\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\t// Range Mappings\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\tvar rangeToText = map.rangeToTexts[k];\n\t\t\t\t\t\t\t\tif (rangeToText.from === 'null' && rangeNapping.to == 'null') {\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeToText.text;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} else if (parseFloat(rangeToText.from) <= dataItem.valueRounded && parseFloat(rangeToText.to) >= dataItem.valueRounded) {\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeToText.text;\n\t\t\t\t\t\t\t\t\tconsole.info(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +rangeToText.text);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tinvertColorOrder() {\r\n\t    this.panel.colors.reverse();\r\n\t    this.refresh();\r\n\t}\r\n\r\n\tgetDecimalsForValue(value) {\r\n    //debugger;\r\n\t    if (_.isNumber(this.panel.decimals)) {\r\n\t      return {decimals: this.panel.decimals, scaledDecimals: null};\r\n\t    }\r\n\r\n\t    var delta = value / 2;\r\n\t    var dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n\t    var magn = Math.pow(10, -dec),\r\n\t      norm = delta / magn, // norm is between 1.0 and 10.0\r\n\t      size;\r\n\r\n\t    if (norm < 1.5) {\r\n\t      size = 1;\r\n\t    } else if (norm < 3) {\r\n\t      size = 2;\r\n\t      // special case for 2.5, requires an extra decimal\r\n\t      if (norm > 2.25) {\r\n\t        size = 2.5;\r\n\t        ++dec;\r\n\t      }\r\n\t    } else if (norm < 7.5) {\r\n\t      size = 5;\r\n\t    } else {\r\n\t      size = 10;\r\n\t    }\r\n\r\n\t    size *= magn;\r\n\r\n\t    // reduce starting decimals if not needed\r\n\t    if (Math.floor(value) === value) { dec = 0; }\r\n\r\n\t    var result = {};\r\n\t    result.decimals = Math.max(0, dec);\r\n\t    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n\t    return result;\r\n\t}\r\n\r\n\tlink(scope, elem, attrs, ctrl) {\r\n\t\tvar templateSrv = this.templateSrv;\r\n\t\tvar diagramElement = elem.find('.diagram');\r\n\t\tdiagramElement.append('<div id=\"'+ctrl.containerDivId+'\"></div>');\r\n\t    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\r\n    \tconsole.debug('found diagramContainer');\r\n    \tconsole.debug(diagramContainer);\r\n    \telem.css('height', ctrl.height + 'px');\r\n\r\n\t    var canvas = elem.find('.canvas')[0];\r\n\t    ctrl.canvas = canvas;\r\n\t    var gradientValueMax = elem.find('.gradient-value-max')[0];\r\n\t    var gradientValueMin = elem.find('.gradient-value-min')[0];\r\n\r\n    \tfunction render(){\r\n    \t\tsetElementHeight();\r\n    \t\tupdateCanvasStyle();\r\n    \t\tupdateStyle();\r\n    \t}\r\n\r\n    \tfunction updateCanvasStyle(){\r\n\t    \tcanvas.width = Math.max(diagramElement[0].clientWidth, 100);\r\n\t\t\tvar canvasContext = canvas.getContext(\"2d\");\r\n\t\t\tcanvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tvar grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\r\n\t\t\tvar colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\r\n\t\t\tfor(var i=0; i<ctrl.panel.colors.length; i++){\r\n\t\t\t\tvar currentColor = ctrl.panel.colors[i];\r\n\t\t\t\tgrd.addColorStop(Math.min(colorWidth*i,1), currentColor);\r\n\t\t\t}\r\n\t\t\tcanvasContext.fillStyle = grd;\r\n\t\t\tcanvasContext.fillRect(0, 0, canvas.width, 3);\r\n    \t\tctrl.canvasContext = canvasContext;\r\n\r\n\t\t\tgradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\r\n\t\t\tgradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\r\n    \t}\r\n\r\n\r\n\r\n    \tfunction setElementHeight() {\r\n\t      //diagramContainer.css('height', ctrl.height + 'px');\r\n\t    }\r\n\r\n    \tthis.events.on('render', function() {\r\n\t\t\trender();\r\n\t\t\tctrl.renderingCompleted();\r\n\t    });\r\n\r\n\t    function updateStyle(){\r\n\t    \tvar data = ctrl.svgData;\r\n\t    \tctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\r\n\t\t\tconsole.info('updating svg style');\r\n\t\t\tvar svg = $(document.getElementById(ctrl.panel.graphId));\r\n\t\t\t$(svg).css('min-width', $(svg).css('max-width'));\r\n\t\t\tif (ctrl.panel.maxWidth){\r\n\t\t\t\t$(svg).css('max-width', '100%');\r\n\t\t\t}\r\n\r\n\t\t\tif(svg[0] === undefined){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor(var key in data){\r\n\t\t\t\tvar seriesItem = data[key];\r\n\r\n\t\t\t\t// Find nodes by ID if we can\r\n\t\t\t\tconsole.info('finding targetElement');\r\n\t\t\t\tvar targetElement = d3.select(svg[0].getElementById(key)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\r\n\r\n\t\t\t\tif(targetElement[0][0] !== null){ // probably a flowchart\r\n\t\t\t\t\ttargetElement.selectAll('rect,circle,polygon').style('fill', seriesItem.color);\r\n\r\n\t\t\t\t\tvar div = targetElement.select('div');\r\n\t\t\t\t\tvar fo = targetElement.select('foreignObject');\r\n\t\t\t\t\t// make foreign object element taller to accomdate value in FireFox/IE\r\n\t\t\t\t\tfo.attr('height', 45);\r\n\t\t\t\t\t// Add value text\r\n\t\t\t\t\tvar p = div.append('p');\r\n\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.debug('finding element that contains id: ' + key);\r\n                    // maybe a flowchart with an alias text node\r\n                    targetElement = $(svg).find('div:contains(\"'+key+'\")').filter(function() {\r\n                        // Matches node name ( 'foo' in both 'foo' and 'foo[bar]')\r\n                        return $(this).attr('id') === key;\r\n                    });\r\n\t\t\t\t\tif(targetElement.length > 0){\r\n\t\t\t\t\t\ttargetElement.parents('.node').find('rect, circle, polygon').css('fill', seriesItem.color);\r\n\t\t\t\t\t\t// make foreign object element taller to accomdate value in FireFox/IE\r\n\t\t\t\t\t\ttargetElement.parents('.node').find('foreignObject').attr('height', 45);\r\n\t\t\t\t\t\t// for edge matches\r\n\t\t\t\t\t\tvar edgeElement = targetElement.parent().find('.edgeLabel');\r\n\t\t\t\t\t\tif(edgeElement.length > 0){\r\n\t\t\t\t\t\t\tedgeElement.css('background-color', 'transparent');\r\n\t\t\t\t\t\t\tedgeElement.append('<br/>'+seriesItem.valueFormatted).addClass('diagram-value');\r\n\t\t\t\t\t\t\tedgeElement.parent('div').css('text-align', 'center').css('background-color', seriesItem.color);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar dElement = d3.select(targetElement[0]);\r\n\t\t\t\t\t\t\t// Add value text\r\n\t\t\t\t\t\t\tvar p = dElement.append('p');\r\n\t\t\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttargetElement = $(svg).find('text:contains(\"'+key+'\")'); // sequence diagram, gantt ?\r\n\t\t\t\t\t\tif(targetElement.length === 0){\r\n\t\t\t\t\t\t\tconsole.warn('couldnt not find a diagram node with id/text: ' + key);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// for node matches\r\n\t\t\t\t\t\ttargetElement.parent().find('rect, circle, polygon').css('fill', seriesItem.color);\r\n\t\t\t\t\t\ttargetElement.append('\\n' + seriesItem.valueFormatted);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.debug(targetElement);\r\n\t\t\t\tconsole.info('set nodes:' + key + ' to color:' + seriesItem.color);\r\n\t\t\t}\r\n\t\t\t//return $(svg).html();\r\n\t\t} // End updateStyle()\r\n\t}\r\n// End Class\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n\tconsole.info('Getting color for value');\r\n\tconsole.debug(data);\r\n\tconsole.debug(value);\r\n\tfor (var i = data.thresholds.length; i > 0; i--) {\r\n\t\tif (value >= data.thresholds[i-1]) {\r\n\t\treturn data.colorMap[i];\r\n\t}\r\n  }\r\n  return _.first(data.colorMap);\r\n}\r\n\r\nfunction getColorByXPercentage(canvas, xPercent){\r\n\tvar x = canvas.width * xPercent;\r\n\tvar context = canvas.getContext(\"2d\");\r\n    var p = context.getImageData(x, 1, 1, 1).data;\r\n    var color = 'rgba('+[p[0] +','+ p[1] +','+ p[2] +','+ p[3]]+')';\r\n    return color;\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n\tDiagramCtrl,\r\n\tDiagramCtrl as MetricsPanelCtrl\r\n};\r\n"]}