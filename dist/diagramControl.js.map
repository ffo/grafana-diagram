{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","mappingEditor","panelDefaults","composites","metricCharacterReplacements","seriesOverrides","decimals","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","moddedSeriesVal","format","valueName","valueOptions","valueMaps","mappingTypes","name","content","mode","mermaidServiceUrl","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","$http","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","mermaidAPI","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","svgData","updateDiagram","render","metricName","replacedText","replace","index","replacement","pattern","replacementPattern","stringToJsRegex","replaceWithText","seriesData","alias","replaceMetricCharacters","target","datapoints","unit","flotpairs","getFlotPairs","last","from","range","isOutsideRange","override","push","without","refresh","composite","ctrl","metrics","undefined","metric","mapping","type","valueToText","rangeToText","valueMap","thresholdCount","colorCount","colorIndex","splice","subItem","remove","svg","graphDefinition","substituteHashPrefixedNotation","templateSrv","diagramType","detectType","diagramContainer","_this","renderCallback","svgCode","bindFunctions","html","templatedURL","scopedVars","method","url","headers","then","successCallback","response","clearDiagram","renderDiagram","errorCallback","warn","matches","match","aMatch","valueType","substring","j","aComposite","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","applyValueMapping","currentWorstSeries","currentWorstSeriesName","aMetric","seriesName","hasOwnProperty","nameOfMetric","isSeriesWorse","series1","series2","series1thresholdLevel","getThresholdLevel","series2thresholdLevel","thresholdLevel","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","split","strVale","Number","trim","slice","reverse","unitFormat","dataItem","valueMapping","text","parseFloat","rangeMapping","rangeNapping","to","isNumber","delta","dec","floor","log","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","updateCanvasStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","updateStyle","key","targetElement","d3","select","selectAll","style","div","fo","attr","classed","filter","parents","edgeElement","parent","addClass","dElement","renderingCompleted","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAo0BA,WAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AACrCC,YAAQC,KAAR,CAAc,yBAAd;AACAD,YAAQC,KAAR,CAAcH,IAAd;AACAE,YAAQC,KAAR,CAAcF,KAAd;AACA,SAAK,IAAIG,IAAIJ,KAAKK,UAAL,CAAgBC,MAA7B,EAAqCF,IAAI,CAAzC,EAA4CA,GAA5C,EAAiD;AAC/C,UAAIH,SAASD,KAAKK,UAAL,CAAgBD,IAAI,CAApB,CAAb,EAAqC;AACnCF,gBAAQC,KAAR,CAAc,YAAUC,IAAE,CAAZ,IAAe,KAAf,GAAuBJ,KAAKO,QAAL,CAAcH,CAAd,CAArC;AACA,eAAOJ,KAAKO,QAAL,CAAcH,IAAE,CAAhB,CAAP;AACA;AACD;AACF;AACD,WAAOI,EAAEC,KAAF,CAAQT,KAAKO,QAAb,CAAP;AACD;;AAED,WAASG,qBAAT,CAA+BC,MAA/B,EAAuCC,QAAvC,EAAiD;AAC/C,QAAIC,IAAIF,OAAOG,KAAP,GAAeF,QAAvB;AACA,QAAIG,UAAUJ,OAAOK,UAAP,CAAkB,IAAlB,CAAd;AACA,QAAIC,IAAIF,QAAQG,YAAR,CAAqBL,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCb,IAAzC;AACA,QAAImB,QAAQ,UAAU,CAACF,EAAE,CAAF,IAAO,GAAP,GAAaA,EAAE,CAAF,CAAb,GAAoB,GAApB,GAA0BA,EAAE,CAAF,CAA1B,GAAiC,GAAjC,GAAuCA,EAAE,CAAF,CAAxC,CAAV,GAA0D,GAAtE;AACA,WAAOE,KAAP;AACD;;;;AAv1BMC,gB;;AACAC,S;;AAELC,sB,kBAAAA,gB;;AAGAC,mB,eAAAA,a;AACAC,mB,eAAAA,a;AACAC,qB,eAAAA,e;AACAC,mB,eAAAA,a;;AAEKlB,O;;;;;;;;;;;;;;;;;;;;;AAIDmB,mB,GAAgB;AACpBC,oBAAY,EADQ;AAEpBC,qCAA6B,EAFT;AAGpB;AACAC,yBAAiB,EAJG;AAKpBzB,oBAAY,MALQ;AAMpB0B,kBAAU,CANU,EAMP;AACbC,gBAAQ,CAAC,yBAAD,EAA4B,0BAA5B,EAAwD,wBAAxD,CAPY;AAQpBC,gBAAQ;AACNC,gBAAM,IADA;AAENC,eAAK,IAFC;AAGNC,eAAK,IAHC;AAINC,eAAK,IAJC;AAKNC,mBAAS,IALH;AAMNC,iBAAO,IAND;AAONC,oBAAU;AACRC,qBAAS,IADD;AAERP,kBAAM;AAFE;AAPJ,SARY;AAoBpBQ,uBAAe,GApBK;AAqBpBC,qBAAa,CArBO;AAsBpBC,kBAAU,KAtBU;AAuBpBC,uBAAe,WAvBK;AAwBpBC,yBAAiB,CAxBG;AAyBpBC,gBAAQ,MAzBY;AA0BpBC,mBAAW,KA1BS;AA2BpBC,sBAAc,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,OAAtB,EAA+B,SAA/B,CA3BM;AA4BpBC,mBAAW,CAAC,EAAD,CA5BS;AA8BpBC,sBAAc,CACZ,EAACC,MAAM,eAAP,EAAwBnD,OAAO,CAA/B,EADY,EAEZ,EAACmD,MAAM,eAAP,EAAwBnD,OAAO,CAA/B,EAFY,CA9BM;AAkCpBoD,iBAAS,eACP,+CADO,GAEP,uBAFO,GAGP,oBAHO,GAIP,WAtCkB;AAuCpBC,cAAM,SAvCc,EAuCH;AACjBC,2BAAmB,EAxCC;AAyCpBC,cAAM;AACJC,oBAAU,CADN,EACS;AACbC,0BAAgB,KAFZ,EAEmB;AACvBC,uBAAa,KAHT,EAGgB;AACpBC,+BAAqB,IAJjB,EAIuB;AAC3BC,qBAAW;AACTC,wBAAY,IADH;AAETC,yBAAa;AAFJ,WALP;AASJC,2BAAiB;AACfC,4BAAgB,EADD,EACK;AACpBC,4BAAgB,EAFD,EAEK;AACpBC,yBAAa,EAHE,EAGE;AACjBrD,mBAAO,GAJQ,EAIH;AACZsD,oBAAQ,EALO,EAKH;AACZC,uBAAW,EANI,EAMA;AACfC,2BAAe,CAPA,EAOG;AAClBC,wBAAY,EARG,EAQC;AAChBC,2BAAe,EATA,EASI;AACnBC,0BAAc,IAVC,EAUK;AACpBC,6BAAiB,CAXF,EAWK;AACpBX,yBAAa,IAZE,CAYI;AAZJ,WATb;AAuBJY,iBAAO;AACLC,4BAAgB,EADX,EACe;AACpBC,uBAAW,EAFN,EAEU;AACfC,oBAAQ,CAHH,EAGM;AACXC,wBAAY,EAJP,EAIW;AAChBC,yBAAa,EALR,EAKY;AACjBC,kCAAsB,EANjB,EAMqB;AAC1BC,sBAAU,EAPL,EAOS;AACdC,wBAAY,2BARP,EAQoC;AACzCC,iCAAqB,CAThB,CASmB;AACxB;;;;;;;;;;;;;;;;;;;;;;AAVK;AAiCP;AACA;AAzDI;AAzCc,O;;yDAsGhBC,W;;;AACJ,6BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,KAArC,EAA4C;AAAA;;AAAA,iIACpCH,MADoC,EAC5BC,SAD4B;;AAE1C/E,YAAEkF,QAAF,CAAW,OAAKC,KAAhB,EAAuBhE,aAAvB;AACA,iBAAK8D,KAAL,GAAaA,KAAb;AACA,iBAAKE,KAAL,CAAWC,OAAX,GAAqB,aAAa,OAAKD,KAAL,CAAWE,EAA7C;AACA,iBAAKC,cAAL,GAAsB,eAAe,OAAKH,KAAL,CAAWC,OAAhD;AACA,iBAAKJ,IAAL,GAAYA,IAAZ;AACA,iBAAKO,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,OAAKC,cAAL,CAAoBC,IAApB,QAAjC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,OAAKG,cAAL,CAAoBD,IAApB,QAAhC;AACA,iBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,OAAKG,cAAL,CAAoBD,IAApB,QAArC;AACA,iBAAKE,WAAL,GAAmB/E,IAAIgF,cAAJ,EAAnB;AACA,iBAAKC,iBAAL;AAX0C;AAY3C;;;;8CAEmB;AAClBC,uBAAWC,UAAX,CAAsB,KAAKb,KAAL,CAAWnC,IAAjC;AACA+C,uBAAWE,UAAX,GAAwB,KAAKC,gBAAL,CAAsBR,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;;2CAEgBS,G,EAAKC,I,EAAM;AAC1B,iBAAKC,KAAL,GAAa,oCAAb;AACA,iBAAKC,SAAL,GAAiB,KAAKtB,IAAL,CAAUuB,WAAV,CAAsB,oCAAoCJ,GAApC,GAA0C,QAAhE,CAAjB;AACD;;;2CAEgB;AACf,iBAAKK,YAAL,CAAkB,SAAlB,EAA6BzF,aAA7B,EAA4C,CAA5C;AACA,iBAAKyF,YAAL,CAAkB,SAAlB,EAA6BxF,aAA7B,EAA4C,CAA5C;AACA,iBAAKwF,YAAL,CAAkB,mBAAlB,EAAuCvF,eAAvC,EAAwD,CAAxD;AACA,iBAAKuF,YAAL,CAAkB,gBAAlB,EAAoCtF,aAApC,EAAmD,CAAnD;AACD;;;gDAEqB;AACpB,mBAAOuF,EAAEC,SAASC,cAAT,CAAwB,KAAKrB,cAA7B,CAAF,CAAP;AACD;;;yCAEcsB,Q,EAAU;AACvBlH,oBAAQC,KAAR,CAAc,eAAd;AACAD,oBAAQC,KAAR,CAAciH,QAAd;AACA,iBAAKC,MAAL,GAAcD,SAASE,GAAT,CAAa,KAAKC,aAAL,CAAmBrB,IAAnB,CAAwB,IAAxB,CAAb,CAAd;AACAhG,oBAAQC,KAAR,CAAc,2BAAd;AACAD,oBAAQC,KAAR,CAAc,KAAKkH,MAAnB;AACA,gBAAIrH,OAAO,KAAKwH,SAAL,EAAX;AACA;AACA,iBAAKC,OAAL,GAAezH,IAAf;AACA,iBAAK0H,aAAL,CAAmB1H,IAAnB;AACA,iBAAK2H,MAAL;AACD;;;kDAEuBC,U,EAAY;AAClC;AACA,gBAAI,OAAOA,UAAP,KAAsB,QAA1B,EAAoC,OAAO,uCAAP;AACpC,gBAAIC,eAAeD,WAAWE,OAAX,CAAmB,gBAAnB,EAAqC,GAArC,CAAnB;AACA,iBAAK,IAAIC,KAAT,IAAkB,KAAKpC,KAAL,CAAW9D,2BAA7B,EAA0D;AACxD,kBAAImG,cAAc,KAAKrC,KAAL,CAAW9D,2BAAX,CAAuCkG,KAAvC,CAAlB;AACA;AACA,kBAAIE,UAAUD,YAAYE,kBAA1B;AACA;AACA,kBAAID,QAAQ3H,MAAR,KAAmB,CAAvB,EAA0B;AAC1B;AACA,kBAAI2H,QAAQ,CAAR,MAAe,GAAnB,EAAwB;AACtBA,0BAAU5G,IAAI8G,eAAJ,CAAoBH,YAAYE,kBAAhC,CAAV;AACD;AACDL,6BAAeA,aAAaC,OAAb,CACbG,OADa,EAEbD,YAAYI,eAFC,CAAf;AAID;AACD,mBAAOP,YAAP;AACD;;;wCAEaQ,U,EAAY;AACxB,gBAAIC,QAAQ,KAAKC,uBAAL,CAA6BF,WAAWG,MAAxC,CAAZ;AACA,gBAAInB,SAAS,IAAIjG,UAAJ,CAAe;AAC1BqH,0BAAYJ,WAAWI,UADG;AAE1BH,qBAAOA,KAFmB;AAG1BI,oBAAML,WAAWK;AAHS,aAAf,CAAb;AAKArB,mBAAOsB,SAAP,GAAmBtB,OAAOuB,YAAP,CAAoB,KAAKjD,KAAL,CAAW9C,aAA/B,CAAnB;AACA,gBAAI4F,aAAaJ,WAAWI,UAAX,IAAyB,EAA1C;AACA,gBAAIA,cAAcA,WAAWnI,MAAX,GAAoB,CAAtC,EAAyC;AACvC,kBAAIuI,OAAOJ,WAAWA,WAAWnI,MAAX,GAAoB,CAA/B,EAAkC,CAAlC,CAAX;AACA,kBAAIwI,OAAO,KAAKC,KAAL,CAAWD,IAAtB;AACA,kBAAID,OAAOC,IAAP,GAAc,CAAC,KAAnB,EAA0B;AACxBzB,uBAAO2B,cAAP,GAAwB,IAAxB;AACD;AACF;AACD,mBAAO3B,MAAP;AACD;;;4CAEiB4B,Q,EAAU;AAC1B,iBAAKtD,KAAL,CAAW7D,eAAX,CAA2BoH,IAA3B,CAAgCD,YAAY,EAA5C;AACD;;;+CAEoBA,Q,EAAU;AAC7B,iBAAKtD,KAAL,CAAW7D,eAAX,GAA6BtB,EAAE2I,OAAF,CAAU,KAAKxD,KAAL,CAAW7D,eAArB,EAAsCmH,QAAtC,CAA7B;AACA,iBAAKG,OAAL;AACD;;;uCAEYC,S,EAAW;AACtB,iBAAK1D,KAAL,CAAW/D,UAAX,CAAsBsH,IAAtB,CAA2BG,aAAa,EAAxC;AACD;;;0CACeA,S,EAAW;AACzB,iBAAK1D,KAAL,CAAW/D,UAAX,GAAwBpB,EAAE2I,OAAF,CAAU,KAAKxD,KAAL,CAAW/D,UAArB,EAAiCyH,SAAjC,CAAxB;AACA,iBAAKD,OAAL;AACD;;;wDAC6B;AAC5B,mBAAO5I,EAAE8G,GAAF,CAAM,KAAKhC,MAAL,CAAYgE,IAAZ,CAAiBjC,MAAvB,EAA+B,UAASA,MAAT,EAAiB;AACrD,qBAAOA,OAAOiB,KAAd;AACD,aAFM,CAAP;AAGD;;;+CAEoBe,S,EAAW;AAC9B,gBAAIA,UAAUE,OAAV,KAAsBC,SAA1B,EAAqC;AACnCH,wBAAUE,OAAV,GAAoB,CAAC,EAAD,CAApB;AACD,aAFD,MAEO;AACLF,wBAAUE,OAAV,CAAkBL,IAAlB,CAAuB,EAAvB;AACD;AACD,iBAAKE,OAAL;AACD;;;oDACyBC,S,EAAWI,M,EAAQ;AAC3CJ,sBAAUE,OAAV,GAAoB/I,EAAE2I,OAAF,CAAUE,UAAUE,OAApB,EAA6BE,MAA7B,CAApB;AACA,iBAAKL,OAAL;AACD;;;wDAE6BpB,W,EAAa;AACzC,iBAAKrC,KAAL,CAAW9D,2BAAX,CAAuCqH,IAAvC,CAA4ClB,eAAe;AACzDE,kCAAoB,EADqC;AAEzDE,+BAAiB;AAFwC,aAA3D;AAID;;;2DACgCJ,W,EAAa;AAC5C,iBAAKrC,KAAL,CAAW9D,2BAAX,GAAyCrB,EAAE2I,OAAF,CAAU,KAAKxD,KAAL,CAAW9D,2BAArB,EAAkDmG,WAAlD,CAAzC;AACA,iBAAKoB,OAAL;AACD;;;0CAEcM,O,EAAS;AACxB,iBAAK/D,KAAL,CAAWzC,SAAX,CAAqBgG,IAArB,CAA0BQ,WAAW,EAArC;AACA;;;6CAEmBA,O,EAAS;AAC1B,iBAAK/D,KAAL,CAAWzC,SAAX,GAAuB1C,EAAE2I,OAAF,CAAU,KAAKxD,KAAL,CAAWzC,SAArB,EAAgCwG,OAAhC,CAAvB;AACD;;;iDAEsBA,O,EAAS;AAC9B,gBAAIA,QAAQC,IAAR,IAAgB,CAApB,EAAuB;AACrB,kBAAID,QAAQE,WAAR,KAAwBJ,SAA5B,EAAuC;AACrCE,wBAAQE,WAAR,GAAsB,CAAC,EAAD,CAAtB;AACD,eAFD,MAEO;AACLF,wBAAQE,WAAR,CAAoBV,IAApB,CAAyB,EAAzB;AACD;AACF,aAND,MAMO,IAAIQ,QAAQC,IAAR,IAAgB,CAApB,EAAuB;AAC5B,kBAAID,QAAQG,WAAR,KAAwBL,SAA5B,EAAuC;AACrCE,wBAAQG,WAAR,GAAsB,CAAC,EAAD,CAAtB;AACD,eAFD,MAEO;AACLH,wBAAQG,WAAR,CAAoBX,IAApB,CAAyB,EAAzB;AACD;AACF;AACF;;;sDAE2BY,Q,EAAUJ,O,EAAS;AAC7C,gBAAII,SAASH,IAAT,IAAiB,CAArB,EAAwB;AACtBG,uBAASF,WAAT,GAAuBpJ,EAAE2I,OAAF,CAAUW,SAASF,WAAnB,EAAgCF,OAAhC,CAAvB;AACD,aAFD,MAEO,IAAII,SAASH,IAAT,IAAiB,CAArB,EAAwB;AAC7BG,uBAASD,WAAT,GAAuBrJ,EAAE2I,OAAF,CAAUW,SAASD,WAAnB,EAAgCH,OAAhC,CAAvB;AACD;AACF;;;6CAEkB;AACjB,gBAAIK,iBAAiB,KAAKpE,KAAL,CAAWtF,UAAX,CAAsBC,MAA3C;AACA,gBAAI0J,aAAa,KAAKrE,KAAL,CAAW3D,MAAX,CAAkB1B,MAAnC;AACA,iBAAK8I,OAAL;AACD;;;sCAEWa,U,EAAY9I,K,EAAO;AAC7B,iBAAKwE,KAAL,CAAW3D,MAAX,CAAkBiI,UAAlB,IAAgC9I,KAAhC;AACD;;;sCAEW8I,U,EAAY;AACtB,iBAAKtE,KAAL,CAAW3D,MAAX,CAAkBkI,MAAlB,CAAyBD,UAAzB,EAAqC,CAArC;AACD;;;qCAEU;AACT,iBAAKtE,KAAL,CAAW3D,MAAX,CAAkBkH,IAAlB,CAAuB,wBAAvB;AACD;;;wCAEaiB,O,EAAS;AACrB,iBAAKxE,KAAL,CAAW5C,MAAX,GAAoBoH,QAAQlK,KAA5B;AACA,iBAAKmJ,OAAL;AACD;;;yCAEc;AACb,gBAAInC,EAAE,MAAI,KAAKtB,KAAL,CAAWC,OAAjB,EAA0BtF,MAA9B,EAAsC;AACpC2G,gBAAE,MAAM,KAAKtB,KAAL,CAAWC,OAAnB,EAA4BwE,MAA5B;AACD;AACD,iBAAKC,GAAL,GAAW,EAAX;AACD;;;wCAEaC,e,EAAiBtK,I,EAAM;AACnC;AACA;AACA;AACA;AACAsK,8BAAkB,KAAKC,8BAAL,CAAoCD,eAApC,EAAqDtK,IAArD,CAAlB;AACAsK,8BAAkB,KAAKE,WAAL,CAAiBpC,eAAjB,CAAiCkC,eAAjC,CAAlB;AACA,iBAAKG,WAAL,GAAmBlE,WAAWmE,UAAX,CAAsBJ,eAAtB,CAAnB;AACA,gBAAIK,mBAAmB1D,EAAEC,SAASC,cAAT,CAAwB,KAAKrB,cAA7B,CAAF,CAAvB;AACA,gBAAI8E,QAAQ,IAAZ;AACA,gBAAIC,iBAAiB,SAAjBA,cAAiB,CAASC,OAAT,EAAkBC,aAAlB,EAAiC;AACpD,kBAAID,YAAY,EAAhB,EAAoB;AAClBH,iCAAiBK,IAAjB,CAAsB,yCAAtB;AACD,eAFD,MAEO;AACLL,iCAAiBK,IAAjB,CAAsBF,OAAtB;AACAC,8BAAcJ,iBAAiB,CAAjB,CAAd;AACAzK,wBAAQC,KAAR,CAAc,wCAAd;AACA;AACAyK,sBAAMnD,OAAN,GAAgBzH,IAAhB;AACA;AACA4K,sBAAMjD,MAAN;AACD;AACF,aAZD;AAaA;AACApB,uBAAWoB,MAAX,CAAkB,KAAKhC,KAAL,CAAWC,OAA7B,EAAsC0E,eAAtC,EAAuDO,cAAvD;AACD;;;wCAEa7K,I,EAAM;AAClB,gBAAI,KAAK2F,KAAL,CAAWtC,OAAX,CAAmB/C,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,kBAAIgD,OAAO,KAAKqC,KAAL,CAAWrC,IAAtB;AACA,kBAAIA,QAAQ,KAAZ,EAAmB;AACjB,oBAAI2H,eAAe,KAAKT,WAAL,CAAiB1C,OAAjB,CAAyB,KAAKnC,KAAL,CAAWpC,iBAApC,EAAuD,KAAKoC,KAAL,CAAWuF,UAAlE,CAAnB;AACA,oBAAIN,QAAQ,IAAZ;AACA,qBAAKnF,KAAL,CAAW;AACT0F,0BAAQ,KADC;AAETC,uBAAKH,YAFI;AAGTI,2BAAS,EAAE,UAAU,2CAAZ;AAHA,iBAAX,EAIGC,IAJH,CAIQ,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACzC;AACA;AACAZ,wBAAMa,YAAN;AACAb,wBAAMc,aAAN,CAAoBF,SAASxL,IAA7B,EAAmCA,IAAnC;AACD,iBATD,EASG,SAAS2L,aAAT,CAAuBH,QAAvB,EAAiC;AAClCtL,0BAAQ0L,IAAR,CAAa,OAAb,EAAsBJ,QAAtB;AACD,iBAXD;AAYD,eAfD,MAeO;AACL,qBAAKC,YAAL;AACA,qBAAKC,aAAL,CAAmB,KAAK/F,KAAL,CAAWtC,OAA9B,EAAuCrD,IAAvC;AACD;AACF;AACF;;;yDAwB8BsK,e,EAAiBtK,I,EAAM;AACpD;AACA;AACA,gBAAI6L,UAAUvB,gBAAgBwB,KAAhB,CAAsB,mBAAtB,CAAd;AACA,gBAAID,YAAY,IAAhB,EAAsB,OAAOvB,eAAP;AACtB;AACA,iBAAK,IAAIlK,IAAI,CAAb,EAAgBA,IAAIyL,QAAQvL,MAA5B,EAAoCF,GAApC,EAAyC;AACvC,kBAAI2L,SAASF,QAAQzL,CAAR,CAAb;AACA,kBAAI4L,YAAYD,OAAO,CAAP,CAAhB;AACAA,uBAASA,OAAOE,SAAP,CAAiB,CAAjB,CAAT;AACA;AACA,mBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKvG,KAAL,CAAW/D,UAAX,CAAsBtB,MAA1C,EAAkD4L,GAAlD,EAAuD;AACrD,oBAAIC,aAAa,KAAKxG,KAAL,CAAW/D,UAAX,CAAsBsK,CAAtB,CAAjB;AACA,oBAAIC,WAAW/I,IAAX,KAAoB2I,MAAxB,EAAgC;AAC9B;AACA,sBAAIK,iBAAiB,IAArB;AACA,0BAAQJ,SAAR;AACE,yBAAK,GAAL;AACEI,uCAAiBpM,KAAKmM,WAAW/I,IAAhB,EAAsBnD,KAAvC;AACAqK,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMiE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiBpM,KAAKmM,WAAW/I,IAAhB,EAAsBiJ,2BAAvC;AACA/B,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMiE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiBpM,KAAKmM,WAAW/I,IAAhB,EAAsBkJ,cAAvC;AACAhC,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMiE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiBpM,KAAKmM,WAAW/I,IAAhB,EAAsBmJ,wBAAvC;AACAjC,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMiE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AAhBJ;AAkBD;AACF;AACD;AACA,mBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAKnF,MAAL,CAAY/G,MAAhC,EAAwCkM,GAAxC,EAA6C;AAC3C,oBAAIC,aAAa,KAAKpF,MAAL,CAAYmF,CAAZ,CAAjB;AACA,oBAAIC,WAAWnE,KAAX,KAAqByD,MAAzB,EAAiC;AAC/B,sBAAIK,iBAAiB,IAArB;AACA,0BAAQJ,SAAR;AACE,yBAAK,GAAL;AACEI,uCAAiBpM,KAAKyM,WAAWnE,KAAhB,EAAuBrI,KAAxC;AACAqK,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMiE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AACF,yBAAK,GAAL;AACEA,uCAAiBpM,KAAKyM,WAAWnE,KAAhB,EAAuBgE,cAAxC;AACAhC,wCAAkBA,gBAAgBxC,OAAhB,CAAwB,MAAMiE,MAA9B,EAAsCK,cAAtC,CAAlB;AACA;AARJ;AAUD;AACF;AACF;AACD,mBAAO9B,eAAP;AACD;;;sCAEW;AACV,gBAAItK,OAAO,EAAX;AACA,gBAAI,KAAKqH,MAAL,IAAe,KAAKA,MAAL,CAAY/G,MAAZ,GAAqB,CAAxC,EAA2C;AACzC,mBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAI,KAAKiH,MAAL,CAAY/G,MAAhC,EAAwCF,GAAxC,EAA6C;AAC3C,oBAAIqM,aAAa,KAAKpF,MAAL,CAAYjH,CAAZ,CAAjB;AACAF,wBAAQC,KAAR,CAAc,2BAAd;AACAD,wBAAQC,KAAR,CAAcsM,UAAd;AACAzM,qBAAKyM,WAAWnE,KAAhB,IAAyB,KAAKoE,cAAL,CAAoBD,WAAWnE,KAA/B,CAAzB;AACA,oBAAIqE,YAAYnM,EAAEqI,IAAF,CAAO4D,WAAWhE,UAAlB,CAAhB;AACA,oBAAImE,YAAYpM,EAAEqM,OAAF,CAAUF,SAAV,IAAuBA,UAAU,CAAV,CAAvB,GAAsC,IAAtD;;AAEA,oBAAI,KAAKhH,KAAL,CAAW3C,SAAX,KAAyB,MAA7B,EAAqC;AACnChD,uBAAKyM,WAAWnE,KAAhB,EAAuBrI,KAAvB,GAA+B,CAA/B;AACAD,uBAAKyM,WAAWnE,KAAhB,EAAuBwE,YAAvB,GAAsC,CAAtC;AACA9M,uBAAKyM,WAAWnE,KAAhB,EAAuByE,aAAvB,GAAuCN,WAAWnE,KAAlD;AACD,iBAJD,MAIO,IAAI9H,EAAEwM,QAAF,CAAWJ,SAAX,CAAJ,EAA2B;AAChC5M,uBAAKyM,WAAWnE,KAAhB,EAAuBrI,KAAvB,GAA+B,CAA/B;AACAD,uBAAKyM,WAAWnE,KAAhB,EAAuByE,aAAvB,GAAuCvM,EAAEyM,MAAF,CAASL,SAAT,CAAvC;AACA5M,uBAAKyM,WAAWnE,KAAhB,EAAuBwE,YAAvB,GAAsC,CAAtC;AACD,iBAJM,MAIA;AACL9M,uBAAKyM,WAAWnE,KAAhB,EAAuBrI,KAAvB,GAA+BwM,WAAWS,KAAX,CAAiBlN,KAAKyM,WAAWnE,KAAhB,EAAuBtF,SAAxC,CAA/B;AACA,sBAAImK,cAAc,KAAKC,mBAAL,CAAyBpN,KAAKyM,WAAWnE,KAAhB,EAAuBrI,KAAhD,CAAlB;AACA,sBAAIoN,aAAahM,IAAIiM,YAAJ,CAAiBtN,KAAKyM,WAAWnE,KAAhB,EAAuBvF,MAAxC,CAAjB;AACA;AACA/C,uBAAKyM,WAAWnE,KAAhB,EAAuBgE,cAAvB,GAAwCe,WAAWrN,KAAKyM,WAAWnE,KAAhB,EAAuBrI,KAAlC,EAAyCkN,YAAYpL,QAArD,EAA+DoL,YAAYI,cAA3E,CAAxC;AACAvN,uBAAKyM,WAAWnE,KAAhB,EAAuBwE,YAAvB,GAAsCzL,IAAImM,UAAJ,CAAexN,KAAKyM,WAAWnE,KAAhB,EAAuBrI,KAAtC,EAA6CkN,YAAYpL,QAAzD,CAAtC;AACD;AACD,oBAAI,KAAK4D,KAAL,CAAW1D,MAAX,CAAkBO,QAAlB,CAA2BC,OAA/B,EAAwC;AACtCzC,uBAAKyM,WAAWnE,KAAhB,EAAuBnH,KAAvB,GAA+B,KAAKsM,mBAAL,CAAyBzN,KAAKyM,WAAWnE,KAAhB,EAAuBoF,SAAhD,EAA2D1N,KAAKyM,WAAWnE,KAAhB,EAAuBrI,KAAlF,CAA/B;AACD,iBAFD,MAEO;AACLD,uBAAKyM,WAAWnE,KAAhB,EAAuBnH,KAAvB,GAA+BpB,iBAAiBC,KAAKyM,WAAWnE,KAAhB,EAAuBoF,SAAxC,EAAmD1N,KAAKyM,WAAWnE,KAAhB,EAAuBrI,KAA1E,CAA/B;AACD;AACF;AACF;AACD;AACA,iBAAK0N,iBAAL,CAAuB3N,IAAvB;AACA;AACA,iBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAKuF,KAAL,CAAW/D,UAAX,CAAsBtB,MAA1C,EAAkDF,GAAlD,EAAuD;AACrD,kBAAI+L,aAAa,KAAKxG,KAAL,CAAW/D,UAAX,CAAsBxB,CAAtB,CAAjB;AACA,kBAAIwN,qBAAqB,IAAzB;AACA,kBAAIC,yBAAyB,IAA7B;AACA,mBAAK,IAAI3B,IAAI,CAAb,EAAgBA,IAAIC,WAAW5C,OAAX,CAAmBjJ,MAAvC,EAA+C4L,GAA/C,EAAoD;AAClD,oBAAI4B,UAAU3B,WAAW5C,OAAX,CAAmB2C,CAAnB,CAAd;AACA,oBAAI6B,aAAaD,QAAQC,UAAzB;AACA;AACA7N,wBAAQC,KAAR,CAAc,oBAAoBsM,WAAWH,cAA7C;AACApM,wBAAQC,KAAR,CAAc,cAAc4N,UAA5B;AACA;AACA,oBAAI,CAAC/N,KAAKgO,cAAL,CAAoBD,UAApB,CAAL,EAAsC;AACtC,oBAAItB,aAAazM,KAAK+N,UAAL,CAAjB;AACA;AACAtB,2BAAWwB,YAAX,GAA0BF,UAA1B;AACA;AACA,oBAAI,KAAKG,aAAL,CAAmBN,kBAAnB,EAAuCnB,UAAvC,CAAJ,EAAwD;AACtDmB,uCAAqBnB,UAArB;AACAoB,2CAAyBE,UAAzB;AACD;AACF;AACD;AACA,kBAAIH,uBAAuB,IAA3B,EAAiC;AAC/BA,mCAAmBrB,wBAAnB,GAA8CsB,yBAAyB,IAAzB,GAAgCD,mBAAmBtB,cAAjG;AACAsB,mCAAmBvB,2BAAnB,GAAiDwB,yBAAyB,IAAzB,GAAgCD,mBAAmB3N,KAApG;AACA2N,mCAAmBtB,cAAnB,GAAoCuB,yBAAyB,IAAzB,GAAgCD,mBAAmBtB,cAAvF;AACA;AACAtM,qBAAKmM,WAAW/I,IAAhB,IAAwBwK,kBAAxB;AACD;AACF;AACD,mBAAO5N,IAAP;AACD;;;wCAEamO,O,EAASC,O,EAAS;AAC9B,gBAAID,WAAW,IAAf,EAAqB;AACnB,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,kBAAIE,wBAAwB,KAAKC,iBAAL,CAAuBH,OAAvB,CAA5B;AACA,kBAAII,wBAAwB,KAAKD,iBAAL,CAAuBF,OAAvB,CAA5B;AACAlO,sBAAQC,KAAR,CAAc,yBAAwBkO,qBAAxB,GAA+C,MAA/C,GAAuDE,qBAArE;AACA,qBAAQA,wBAAwBF,qBAAhC;AACD;AACF;;;4CAGiBhH,M,EAAQ;AACxB;AACA,gBAAImH,iBAAiB,CAArB;AACA,gBAAIvO,QAAQoH,OAAOpH,KAAnB;AACA,gBAAII,aAAagH,OAAOqG,SAAP,CAAiBrN,UAAlC;AACA;AACA,gBAAIA,eAAemJ,SAAnB,EAA8B;AAC5B,qBAAOgF,cAAP;AACD;AACD;AACA,gBAAInO,WAAWC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,qBAAOkO,cAAP;AACD;AACD,gBAAIvO,SAASI,WAAW,CAAX,CAAb,EAA4B;AAC1B;AACAmO,+BAAiB,CAAjB;AACD;AACD,gBAAIvO,SAASI,WAAW,CAAX,CAAb,EAA4B;AAC1B;AACAmO,+BAAiB,CAAjB;AACD;AACD,mBAAOA,cAAP;AACD;;;8CAEmBxO,I,EAAMC,K,EAAO;AAC/BC,oBAAQC,KAAR,CAAc,4BAAd;AACAD,oBAAQC,KAAR,CAAcH,IAAd;AACAE,oBAAQC,KAAR,CAAcF,KAAd;AACA,gBAAIkC,MAAMsM,KAAKtM,GAAL,CAASuM,KAAT,CAAeD,IAAf,EAAqBzO,KAAKK,UAA1B,CAAV;AACA,gBAAI+B,MAAMqM,KAAKrM,GAAL,CAASsM,KAAT,CAAeD,IAAf,EAAqBzO,KAAKK,UAA1B,CAAV;AACA,gBAAIsO,mBAAmBvM,MAAMD,GAA7B;AACA,gBAAIyM,uBAAuB3O,QAAQkC,GAAnC;AACA,gBAAIvB,WAAWgO,uBAAuBD,gBAAtC;AACA;AACA/N,uBAAW6N,KAAKtM,GAAL,CAAS,KAAT,EAAgBvB,QAAhB,CAAX;AACA;AACAA,uBAAW6N,KAAKrM,GAAL,CAAS,KAAT,EAAgBxB,QAAhB,CAAX;AACA,gBAAIZ,KAAK6O,YAAT,EAAuB;AACrBjO,yBAAW,IAAIA,QAAf;AACD;;AAED,mBAAOF,sBAAsB,KAAKC,MAA3B,EAAmCC,QAAnC,CAAP;AACD;;;yCAEckO,e,EAAiB;AAC9B,gBAAIrC,aAAa,EAAjB;AAAA,gBACEiB,YAAY,EADd;AAAA,gBAEEqB,YAAY,EAFd;;AAIA7O,oBAAQC,KAAR,CAAc,mCAAd;AACAD,oBAAQC,KAAR,CAAc2O,eAAd;AACA5O,oBAAQC,KAAR,CAAc,KAAKwF,KAAL,CAAW7D,eAAzB;AACA,iBAAK,IAAI1B,IAAI,CAAb,EAAgBA,KAAK,KAAKuF,KAAL,CAAW7D,eAAX,CAA2BxB,MAAhD,EAAwDF,GAAxD,EAA6D;AAC3DF,sBAAQC,KAAR,CAAc,YAAd;AACAD,sBAAQC,KAAR,CAAc,KAAKwF,KAAL,CAAW7D,eAAX,CAA2B1B,CAA3B,CAAd;;AAEA,kBAAI,KAAKuF,KAAL,CAAW7D,eAAX,CAA2B1B,CAA3B,CAAJ,EAAmC;AACjC,oBAAI4O,QAAQ3N,IAAI8G,eAAJ,CAAoB,KAAKxC,KAAL,CAAW7D,eAAX,CAA2B1B,CAA3B,EAA8BkI,KAAlD,CAAZ;AACA,oBAAIuD,UAAUiD,gBAAgBhD,KAAhB,CAAsBkD,KAAtB,CAAd;AACA,oBAAInD,WAAWA,QAAQvL,MAAR,GAAiB,CAAhC,EAAmC;AACjCyO,8BAAY,KAAKpJ,KAAL,CAAW7D,eAAX,CAA2B1B,CAA3B,CAAZ;AACD;AACF;AACF;AACDsN,sBAAUrN,UAAV,GAAuB,CAAC0O,UAAU1O,UAAV,IAAwB,KAAKsF,KAAL,CAAWtF,UAApC,EAAgD4O,KAAhD,CAAsD,GAAtD,EAA2D3H,GAA3D,CAA+D,UAAS4H,OAAT,EAAkB;AACtG,qBAAOC,OAAOD,QAAQE,IAAR,EAAP,CAAP;AACD,aAFsB,CAAvB;AAGA1B,sBAAUnN,QAAV,GAAqB,KAAKoF,KAAL,CAAW3D,MAAX,CAAkBqN,KAAlB,EAArB;AACA3B,sBAAUmB,YAAV,GAAyBE,UAAUF,YAAV,IAA0B,KAAnD;AACA,gBAAInB,UAAUmB,YAAd,EAA4B;AAC1BnB,wBAAUnN,QAAV,CAAmB+O,OAAnB;AACD;AACD7C,uBAAWiB,SAAX,GAAuBA,SAAvB;;AAEAjB,uBAAWzJ,SAAX,GAAuB+L,UAAU/L,SAAV,IAAuB,KAAK2C,KAAL,CAAW3C,SAAzD;;AAEAyJ,uBAAW1J,MAAX,GAAoBgM,UAAUQ,UAAV,IAAwB,KAAK5J,KAAL,CAAW5C,MAAvD;AACA,mBAAO0J,UAAP;AACD;;;4CAEgBzM,I,EAAM;AACvB,iBAAK,IAAII,IAAI,CAAb,EAAgBA,IAAI,KAAKuF,KAAL,CAAWzC,SAAX,CAAqB5C,MAAzC,EAAiDF,GAAjD,EAAsD;AACrD,kBAAIkH,MAAM,KAAK3B,KAAL,CAAWzC,SAAX,CAAqB9C,CAArB,CAAV;AACA,kBAAI,CAAEkH,IAAI0G,cAAJ,CAAmB,OAAnB,CAAN,EACC;AACD,kBAAIgB,QAAQ3N,IAAI8G,eAAJ,CAAoBb,IAAIgB,KAAxB,CAAZ;AACApI,sBAAQC,KAAR,CAAc,uBAAsBmH,IAAIgB,KAAxC;AACA,mBAAI,IAAI4D,IAAI,CAAZ,EAAeA,IAAI,KAAK7E,MAAL,CAAY/G,MAA/B,EAAuC4L,GAAvC,EAA4C;AAC3C,oBAAIL,UAAU,KAAKxE,MAAL,CAAY6E,CAAZ,EAAe5D,KAAf,CAAqBwD,KAArB,CAA2BkD,KAA3B,CAAd;AACA9O,wBAAQC,KAAR,CAAc,eAAc,KAAKkH,MAAL,CAAY6E,CAAZ,EAAe5D,KAA3C;AACA,oBAAIuD,WAAWA,QAAQvL,MAAR,GAAiB,CAAhC,EAAmC;AAClC,sBAAImM,aAAa,KAAKpF,MAAL,CAAY6E,CAAZ,CAAjB;AACA,sBAAIsD,WAAWxP,KAAKyM,WAAWnE,KAAhB,CAAf;AACA,sBAAIhB,IAAIqC,IAAJ,IAAY,CAAhB,EAAmB;AAClB,yBAAI,IAAI6C,IAAI,CAAZ,EAAeA,IAAIlF,IAAIsC,WAAJ,CAAgBtJ,MAAnC,EAA2CkM,GAA3C,EAAgD;AAC9C;AACA;AACA;AACA,0BAAIiD,eAAenI,IAAIsC,WAAJ,CAAgB4C,CAAhB,CAAnB;AACAtM,8BAAQC,KAAR,CAAc,kBAAiBqP,SAASlD,cAA1B,GAA0C,MAA1C,GAAkDmD,aAAaxP,KAA7E;AACA,0BAAIwP,aAAaxP,KAAb,KAAuB,MAA3B,EAAmC;AAClC,4BAAIuP,SAASvP,KAAT,KAAmB,IAAnB,IAA2BuP,SAASvP,KAAT,KAAmB,KAAK,CAAvD,EAA0D;AACzDuP,mCAASlD,cAAT,GAA0BmD,aAAaC,IAAvC;AACA;AACA;AACD;AACA,uBAND,MAMO,IAAIC,WAAWF,aAAaxP,KAAxB,KAAkCuP,SAAS1C,YAA/C,EAA6D;AACnE0C,iCAASlD,cAAT,GAA0BmD,aAAaC,IAAvC;AACAxP,gCAAQC,KAAR,CAAc,yBAAwBsM,WAAWnE,KAAnC,GAA0C,IAA1C,GAAgDkH,SAAS1C,YAAzD,GAAuE,MAAvE,GAA+E2C,aAAaC,IAA1G;AACA;AACA;AACF;AACD,mBAnBD,MAmBO,IAAIpI,IAAIqC,IAAJ,IAAY,CAAhB,EAAmB;AACzB,yBAAI,IAAI6C,KAAI,CAAZ,EAAeA,KAAIlF,IAAIuC,WAAJ,CAAgBvJ,MAAnC,EAA2CkM,IAA3C,EAAgD;AAC9C;AACA;AACA;AACA,0BAAIoD,eAAetI,IAAIuC,WAAJ,CAAgB2C,EAAhB,CAAnB;AACA,0BAAIoD,aAAa9G,IAAb,KAAsB,MAAtB,IAAgC+G,aAAaC,EAAb,IAAmB,MAAvD,EAA+D;AAC9D,4BAAIN,SAASvP,KAAT,KAAmB,IAAnB,IAA2BuP,SAASvP,KAAT,KAAmB,KAAK,CAAvD,EAA0D;AACzDuP,mCAASlD,cAAT,GAA0BsD,aAAaF,IAAvC;AACA;AACA;AACD;AACA,uBAND,MAMO,IAAIC,WAAWC,aAAa9G,IAAxB,KAAiC0G,SAAS1C,YAA1C,IAA0D6C,WAAWC,aAAaE,EAAxB,KAA+BN,SAAS1C,YAAtG,EAAoH;AAC1H0C,iCAASlD,cAAT,GAA0BsD,aAAaF,IAAvC;AACAxP,gCAAQC,KAAR,CAAc,yBAAwBsM,WAAWnE,KAAnC,GAA0C,IAA1C,GAAgDkH,SAAS1C,YAAzD,GAAuE,MAAvE,GAA+E8C,aAAaF,IAA1G;AACA;AACA;AACD;AACF;AACD;AACD;AACD;AACD;;;6CAEmB;AACjB,iBAAK/J,KAAL,CAAW3D,MAAX,CAAkBsN,OAAlB;AACA,iBAAKlG,OAAL;AACD;;;8CAEmBnJ,K,EAAO;AACzB,gBAAIO,EAAEuP,QAAF,CAAW,KAAKpK,KAAL,CAAW5D,QAAtB,CAAJ,EAAqC;AACnC,qBAAO;AACLA,0BAAU,KAAK4D,KAAL,CAAW5D,QADhB;AAELwL,gCAAgB;AAFX,eAAP;AAID;;AAED,gBAAIyC,QAAQ/P,QAAQ,CAApB;AACA,gBAAIgQ,MAAM,CAACxB,KAAKyB,KAAL,CAAWzB,KAAK0B,GAAL,CAASH,KAAT,IAAkBvB,KAAK2B,IAAlC,CAAX;;AAEA,gBAAIC,OAAO5B,KAAK6B,GAAL,CAAS,EAAT,EAAa,CAACL,GAAd,CAAX;AAAA,gBACEM,OAAOP,QAAQK,IADjB;AAAA,gBACuB;AACrBG,gBAFF;;AAIA,gBAAID,OAAO,GAAX,EAAgB;AACdC,qBAAO,CAAP;AACD,aAFD,MAEO,IAAID,OAAO,CAAX,EAAc;AACnBC,qBAAO,CAAP;AACA;AACA,kBAAID,OAAO,IAAX,EAAiB;AACfC,uBAAO,GAAP;AACA,kBAAEP,GAAF;AACD;AACF,aAPM,MAOA,IAAIM,OAAO,GAAX,EAAgB;AACrBC,qBAAO,CAAP;AACD,aAFM,MAEA;AACLA,qBAAO,EAAP;AACD;;AAEDA,oBAAQH,IAAR;;AAEA;AACA,gBAAI5B,KAAKyB,KAAL,CAAWjQ,KAAX,MAAsBA,KAA1B,EAAiC;AAC/BgQ,oBAAM,CAAN;AACD;;AAED,gBAAIQ,SAAS,EAAb;AACAA,mBAAO1O,QAAP,GAAkB0M,KAAKrM,GAAL,CAAS,CAAT,EAAY6N,GAAZ,CAAlB;AACAQ,mBAAOlD,cAAP,GAAwBkD,OAAO1O,QAAP,GAAkB0M,KAAKyB,KAAL,CAAWzB,KAAK0B,GAAL,CAASK,IAAT,IAAiB/B,KAAK2B,IAAjC,CAAlB,GAA2D,CAAnF;;AAEA,mBAAOK,MAAP;AACD;;;+BAEIC,K,EAAOC,I,EAAMC,K,EAAOtH,I,EAAM;AAC7B,gBAAIkB,cAAc,KAAKA,WAAvB;AACA,gBAAIqG,iBAAiBF,KAAKG,IAAL,CAAU,UAAV,CAArB;AACAD,2BAAeE,MAAf,CAAsB,cAAczH,KAAKxD,cAAnB,GAAoC,UAA1D;AACA,gBAAI6E,mBAAmB1D,EAAEC,SAASC,cAAT,CAAwBmC,KAAKxD,cAA7B,CAAF,CAAvB;AACA5F,oBAAQC,KAAR,CAAc,wBAAd;AACAD,oBAAQC,KAAR,CAAcwK,gBAAd;AACAgG,iBAAKK,GAAL,CAAS,QAAT,EAAmB,MAAnB;;AAEA,gBAAIrQ,SAASgQ,KAAKG,IAAL,CAAU,SAAV,EAAqB,CAArB,CAAb;AACAxH,iBAAK3I,MAAL,GAAcA,MAAd;AACA,gBAAIsQ,mBAAmBN,KAAKG,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;AACA,gBAAII,mBAAmBP,KAAKG,IAAL,CAAU,qBAAV,EAAiC,CAAjC,CAAvB;;AAEA,qBAASK,iBAAT,GAA6B;AAC3BxQ,qBAAOG,KAAP,GAAe2N,KAAKrM,GAAL,CAASyO,eAAe,CAAf,EAAkBO,WAA3B,EAAwC,GAAxC,CAAf;AACA,kBAAIC,gBAAgB1Q,OAAOK,UAAP,CAAkB,IAAlB,CAApB;AACAqQ,4BAAcC,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B3Q,OAAOG,KAArC,EAA4CH,OAAOyD,MAAnD;;AAEA,kBAAImN,MAAMF,cAAcG,oBAAd,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC7Q,OAAOG,KAAhD,EAAuD,CAAvD,CAAV;AACA,kBAAI2Q,aAAa,IAAIhD,KAAKrM,GAAL,CAASkH,KAAK3D,KAAL,CAAW3D,MAAX,CAAkB1B,MAA3B,EAAmC,CAAnC,CAArB;AACA,mBAAK,IAAIF,IAAI,CAAb,EAAgBA,IAAIkJ,KAAK3D,KAAL,CAAW3D,MAAX,CAAkB1B,MAAtC,EAA8CF,GAA9C,EAAmD;AACjD,oBAAIsR,eAAepI,KAAK3D,KAAL,CAAW3D,MAAX,CAAkB5B,CAAlB,CAAnB;AACAmR,oBAAII,YAAJ,CAAiBlD,KAAKtM,GAAL,CAASsP,aAAarR,CAAtB,EAAyB,CAAzB,CAAjB,EAA8CsR,YAA9C;AACD;AACDL,4BAAcO,SAAd,GAA0BL,GAA1B;AACAF,4BAAcQ,QAAd,CAAuB,CAAvB,EAA0B,CAA1B,EAA6BlR,OAAOG,KAApC,EAA2C,CAA3C;AACAwI,mBAAK+H,aAAL,GAAqBA,aAArB;;AAEAJ,+BAAiBa,SAAjB,GAA6BrD,KAAKrM,GAAL,CAASsM,KAAT,CAAeD,IAAf,EAAqBnF,KAAK3D,KAAL,CAAWtF,UAAX,CAAsB4O,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACAiC,+BAAiBY,SAAjB,GAA6BrD,KAAKtM,GAAL,CAASuM,KAAT,CAAeD,IAAf,EAAqBnF,KAAK3D,KAAL,CAAWtF,UAAX,CAAsB4O,KAAtB,CAA4B,GAA5B,CAArB,CAA7B;AACD;AACDkC,gCAhC6B,CAgCR;;AAErB,qBAASY,WAAT,GAAuB;AACrB,kBAAI/R,OAAOsJ,KAAK7B,OAAhB;AACA6B,mBAAK7B,OAAL,GAAe,EAAf,CAFqB,CAEF;AACnBvH,sBAAQC,KAAR,CAAc,oBAAd;AACA,kBAAIkK,MAAMpD,EAAEC,SAASC,cAAT,CAAwBmC,KAAK3D,KAAL,CAAWC,OAAnC,CAAF,CAAV;AACAqB,gBAAEoD,GAAF,EAAO2G,GAAP,CAAW,WAAX,EAAwB/J,EAAEoD,GAAF,EAAO2G,GAAP,CAAW,WAAX,CAAxB;AACA,kBAAI1H,KAAK3D,KAAL,CAAW/C,QAAf,EAAyB;AACvBqE,kBAAEoD,GAAF,EAAO2G,GAAP,CAAW,WAAX,EAAwB,MAAxB;AACD;;AAED,kBAAI3G,IAAI,CAAJ,MAAWb,SAAf,EAA0B;AACxB;AACD;;AAED,mBAAK,IAAIwI,GAAT,IAAgBhS,IAAhB,EAAsB;AACpB,oBAAIyM,aAAazM,KAAKgS,GAAL,CAAjB;;AAEA;AACA;AACA,oBAAIC,gBAAgBC,GAAGC,MAAH,CAAU9H,IAAI,CAAJ,EAAOlD,cAAP,CAAsB6K,GAAtB,CAAV,CAApB,CALoB,CAKuC;AAC3D,oBAAIC,cAAc,CAAd,EAAiB,CAAjB,MAAwB,IAA5B,EAAkC;AAAE;AAClCA,gCAAcG,SAAd,CAAwB,qBAAxB,EAA+CC,KAA/C,CAAqD,MAArD,EAA6D5F,WAAWtL,KAAxE;;AAEA,sBAAImR,MAAML,cAAcE,MAAd,CAAqB,KAArB,CAAV;AACA,sBAAII,KAAKN,cAAcE,MAAd,CAAqB,eAArB,CAAT;AACA;AACAI,qBAAGC,IAAH,CAAQ,QAAR,EAAkB,EAAlB;AACA;AACA,sBAAIvR,IAAIqR,IAAIvB,MAAJ,CAAW,GAAX,CAAR;AACA9P,oBAAEwR,OAAF,CAAU,eAAV;AACAxR,oBAAEoR,KAAF,CAAQ,kBAAR,EAA4B5F,WAAWtL,KAAvC;AACAF,oBAAE+J,IAAF,CAAOyB,WAAWH,cAAlB;AACD,iBAZD,MAYO;AACLpM,0BAAQC,KAAR,CAAc,uCAAuC6R,GAArD;AACA;AACAC,kCAAgBhL,EAAEoD,GAAF,EAAOyG,IAAP,CAAY,mBAAmBkB,GAAnB,GAAyB,IAArC,EAA2CU,MAA3C,CAAkD,YAAW;AAC3E;AACA,2BAAOzL,EAAE,IAAF,EAAQuL,IAAR,CAAa,IAAb,MAAuBR,GAA9B;AACD,mBAHe,CAAhB;AAIA,sBAAIC,cAAc3R,MAAd,GAAuB,CAA3B,EAA8B;AAC5B2R,kCAAcU,OAAd,CAAsB,OAAtB,EAA+B7B,IAA/B,CAAoC,uBAApC,EAA6DE,GAA7D,CAAiE,MAAjE,EAAyEvE,WAAWtL,KAApF;AACA;AACA8Q,kCAAcU,OAAd,CAAsB,OAAtB,EAA+B7B,IAA/B,CAAoC,eAApC,EAAqD0B,IAArD,CAA0D,QAA1D,EAAoE,EAApE;AACA;AACA,wBAAII,cAAcX,cAAcY,MAAd,GAAuB/B,IAAvB,CAA4B,YAA5B,CAAlB;AACA,wBAAI8B,YAAYtS,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BsS,kCAAY5B,GAAZ,CAAgB,kBAAhB,EAAoC,aAApC;AACA4B,kCAAY7B,MAAZ,CAAmB,UAAUtE,WAAWH,cAAxC,EAAwDwG,QAAxD,CAAiE,eAAjE;AACAF,kCAAYC,MAAZ,CAAmB,KAAnB,EAA0B7B,GAA1B,CAA8B,YAA9B,EAA4C,QAA5C,EAAsDA,GAAtD,CAA0D,kBAA1D,EAA8EvE,WAAWtL,KAAzF;AACD,qBAJD,MAIO;AACL,0BAAI4R,WAAWb,GAAGC,MAAH,CAAUF,cAAc,CAAd,CAAV,CAAf;AACA;AACA,0BAAIhR,IAAI8R,SAAShC,MAAT,CAAgB,GAAhB,CAAR;AACA9P,wBAAEwR,OAAF,CAAU,eAAV;AACAxR,wBAAEoR,KAAF,CAAQ,kBAAR,EAA4B5F,WAAWtL,KAAvC;AACAF,wBAAE+J,IAAF,CAAOyB,WAAWH,cAAlB;AACD;AACF,mBAlBD,MAkBO;AACL2F,oCAAgBhL,EAAEoD,GAAF,EAAOyG,IAAP,CAAY,oBAAoBkB,GAApB,GAA0B,IAAtC,CAAhB,CADK,CACwD;AAC7D,wBAAIC,cAAc3R,MAAd,KAAyB,CAA7B,EAAgC;AAC9BJ,8BAAQC,KAAR,CAAc,mDAAmD6R,GAAjE;AACA;AACD;AACD;AACAC,kCAAcY,MAAd,GAAuB/B,IAAvB,CAA4B,uBAA5B,EAAqDE,GAArD,CAAyD,MAAzD,EAAiEvE,WAAWtL,KAA5E;AACA8Q,kCAAclB,MAAd,CAAqB,OAAOtE,WAAWH,cAAvC;AACD;AACF;;AAEDpM,wBAAQC,KAAR,CAAc8R,aAAd;AACA/R,wBAAQC,KAAR,CAAc,eAAe6R,GAAf,GAAqB,YAArB,GAAoCvF,WAAWtL,KAA7D;AACD;AACD;AACD,aA3G4B,CA2G3B;;AAED,qBAASwG,MAAT,GAAkB;AACjBwJ;AACAY;AACD;;AAED,iBAAKhM,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAW;AAClC2B;AACA2B,mBAAK0J,kBAAL;AACD,aAHD;AAID;;;;QA1sBuB1R,gB;;AAouB1B+D,kBAAY4N,WAAZ,GAA0B,aAA1B;;6BAGE5N,W;;kCACAA,W","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\nimport {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport {\n  diagramEditor,\n  displayEditor,\n  compositeEditor,\n  mappingEditor\n} from './properties';\nimport _ from 'lodash';\nimport './series_overrides_diagram_ctrl';\nimport './css/diagram.css!';\n\nconst panelDefaults = {\n  composites: [],\n  metricCharacterReplacements: [],\n  // other style overrides\n  seriesOverrides: [],\n  thresholds: '0,10',\n  decimals: 2, // decimal precision\n  colors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\n  legend: {\n    show: true,\n    min: true,\n    max: true,\n    avg: true,\n    current: true,\n    total: true,\n    gradient: {\n      enabled: true,\n      show: true\n    }\n  },\n  maxDataPoints: 100,\n  mappingType: 1,\n  maxWidth: false,\n  nullPointMode: 'connected',\n  moddedSeriesVal: 0,\n  format: 'none',\n  valueName: 'avg',\n  valueOptions: ['avg', 'min', 'max', 'total', 'current'],\n  valueMaps: [{\n  }],\n  mappingTypes: [\n    {name: 'value to text', value: 1},\n    {name: 'range to text', value: 2},\n  ],\n  content: 'graph LR\\n' +\n    'A[Square Rect] -- Link text --> B((Circle))\\n' +\n    'A --> C(Round Rect)\\n' +\n    'B --> D{Rhombus}\\n' +\n    'C --> D\\n',\n  mode: 'content', //allowed values: 'content' and 'url'\n  mermaidServiceUrl: '',\n  init: {\n    logLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\n    cloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\n    startOnLoad: false, // - This options controls whether or mermaid starts when the page loads\n    arrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\n    flowchart: {\n      htmlLabels: true,\n      useMaxWidth: true\n    },\n    sequenceDiagram: {\n      diagramMarginX: 50, // - margin to the right and left of the sequence diagram\n      diagramMarginY: 10, // - margin to the over and under the sequence diagram\n      actorMargin: 50, // - Margin between actors\n      width: 150, // - Width of actor boxes\n      height: 65, // - Height of actor boxes00000000001111\n      boxMargin: 10, // - Margin around l01oop boxes\n      boxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\n      noteMargin: 10, // - margin around notes\n      messageMargin: 35, // - Space between messages\n      mirrorActors: true, // - mirror actors under diagram\n      bottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\n      useMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\n    },\n    gantt: {\n      titleTopMargin: 25, // - margin top for the text over the gantt diagram\n      barHeight: 20, // - the height of the bars in the graph\n      barGap: 4, // - the margin between the different activities in the gantt diagram\n      topPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\n      leftPadding: 75, // - the space allocated for the section name to the left of the activities.\n      gridLineStartPadding: 35, // - Vertical starting position of the grid lines\n      fontSize: 11, // - font size ...\n      fontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\n      numberSectionStyles: 3, // - the number of alternating section styles\n      /** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\n\t\t\t\t[\n\t\t        // Within a day\n\t\t        ['%I:%M', function (d) {\n\t\t            return d.getHours();\n\t\t        }],\n\t\t        // Monday a week\n\t\t        ['w. %U', function (d) {\n\t\t            return d.getDay() == 1;\n\t\t        }],\n\t\t        // Day within a week (not monday)\n\t\t        ['%a %d', function (d) {\n\t\t            return d.getDay() && d.getDate() != 1;\n\t\t        }],\n\t\t        // within a month\n\t\t        ['%b %d', function (d) {\n\t\t            return d.getDate() != 1;\n\t\t        }],\n\t\t        // Month\n\t\t        ['%m-%y', function (d) {\n\t\t            return d.getMonth();\n\t\t        }]] **/\n    },\n    //classDiagram: {},\n    //info: {}\n  }\n};\n\nclass DiagramCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $sce, $http) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.$http = $http;\n    this.panel.graphId = 'diagram_' + this.panel.id;\n    this.containerDivId = 'container_' + this.panel.graphId;\n    this.$sce = $sce;\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.unitFormats = kbn.getUnitFormats();\n    this.initializeMermaid();\n  }\n\n  initializeMermaid() {\n    mermaidAPI.initialize(this.panel.init);\n    mermaidAPI.parseError = this.handleParseError.bind(this);\n  }\n\n  handleParseError(err, hash) {\n    this.error = 'Failed to parse diagram definition';\n    this.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Diagram', diagramEditor, 2);\n    this.addEditorTab('Display', displayEditor, 3);\n    this.addEditorTab('Metric Composites', compositeEditor, 4);\n    this.addEditorTab('Value Mappings', mappingEditor, 5);\n  }\n\n  getDiagramContainer() {\n    return $(document.getElementById(this.containerDivId));\n  }\n\n  onDataReceived(dataList) {\n    console.debug('received data');\n    console.debug(dataList);\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    console.debug('mapped dataList to series');\n    console.debug(this.series);\n    var data = this.setValues();\n    // this update works for local diagrams, if the url method is used the data has to be stored in the callback\n    this.svgData = data;\n    this.updateDiagram(data);\n    this.render();\n  }\n\n  replaceMetricCharacters(metricName) {\n    // a datasource sending bad data will have a type other than string, set it to \"MISSING_METRIC_TARGET\" and return\n    if (typeof metricName !== 'string') return \"DATASOURCE_SENT_INVALID_METRIC_TARGET\";\n    var replacedText = metricName.replace(/\"|,|;|=|:|{|}/g, '_');\n    for (var index in this.panel.metricCharacterReplacements) {\n      var replacement = this.panel.metricCharacterReplacements[index];\n      // start with a simple replacement\n      var pattern = replacement.replacementPattern;\n      // check if the pattern is empty\n      if (pattern.length === 0) continue;\n      // if it is a regex, convert\n      if (pattern[0] === '/') {\n        pattern = kbn.stringToJsRegex(replacement.replacementPattern);\n      }\n      replacedText = replacedText.replace(\n        pattern,\n        replacement.replaceWithText\n      );\n    }\n    return replacedText;\n  }\n\n  seriesHandler(seriesData) {\n    var alias = this.replaceMetricCharacters(seriesData.target);\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: alias,\n      unit: seriesData.unit\n    });\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    var datapoints = seriesData.datapoints || [];\n    if (datapoints && datapoints.length > 0) {\n      var last = datapoints[datapoints.length - 1][1];\n      var from = this.range.from;\n      if (last - from < -10000) {\n        series.isOutsideRange = true;\n      }\n    }\n    return series;\n  } // End seriesHandler()\n\n  addSeriesOverride(override) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override) {\n    this.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\n    this.refresh();\n  }\n\n  addComposite(composite) {\n    this.panel.composites.push(composite || {});\n  }\n  removeComposite(composite) {\n    this.panel.composites = _.without(this.panel.composites, composite);\n    this.refresh();\n  }\n  getSeriesNamesForComposites() {\n    return _.map(this.$scope.ctrl.series, function(series) {\n      return series.alias;\n    });\n  }\n\n  addMetricToComposite(composite) {\n    if (composite.metrics === undefined) {\n      composite.metrics = [{}];\n    } else {\n      composite.metrics.push({});\n    }\n    this.refresh();\n  }\n  removeMetricFromComposite(composite, metric) {\n    composite.metrics = _.without(composite.metrics, metric);\n    this.refresh();\n  }\n\n  addMetricCharacterReplacement(replacement) {\n    this.panel.metricCharacterReplacements.push(replacement || {\n      replacementPattern: '',\n      replaceWithText: '_'\n    });\n  }\n  removeMetricCharacterReplacement(replacement) {\n    this.panel.metricCharacterReplacements = _.without(this.panel.metricCharacterReplacements, replacement);\n    this.refresh();\n  }\n\n\taddValueMapping(mapping) {\n\t\tthis.panel.valueMaps.push(mapping || {});\n\t}\n\n  removeValueMapping(mapping) {\n    this.panel.valueMaps = _.without(this.panel.valueMaps, mapping);\n  }\n\n  addEntryToValueMapping(mapping) {\n    if (mapping.type == 1) {\n      if (mapping.valueToText === undefined) {\n        mapping.valueToText = [{}];\n      } else {\n        mapping.valueToText.push({});\n      }\n    } else if (mapping.type == 2) {\n      if (mapping.rangeToText === undefined) {\n        mapping.rangeToText = [{}];\n      } else {\n        mapping.rangeToText.push({});\n      }\n    }\n  }\n\n  removeEntryFromValueMapping(valueMap, mapping) {\n    if (valueMap.type == 1) {\n      valueMap.valueToText = _.without(valueMap.valueToText, mapping);\n    } else if (valueMap.type == 2) {\n      valueMap.rangeToText = _.without(valueMap.rangeToText, mapping);\n    }\n  }\n\n  updateThresholds() {\n    var thresholdCount = this.panel.thresholds.length;\n    var colorCount = this.panel.colors.length;\n    this.refresh();\n  }\n\n  changeColor(colorIndex, color) {\n    this.panel.colors[colorIndex] = color;\n  }\n\n  removeColor(colorIndex) {\n    this.panel.colors.splice(colorIndex, 1);\n  }\n\n  addColor() {\n    this.panel.colors.push('rgba(255, 255, 255, 1)');\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.refresh();\n  }\n\n  clearDiagram() {\n    if ($('#'+this.panel.graphId).length) {\n      $('#' + this.panel.graphId).remove();\n    }\n    this.svg = {};\n  }\n\n  renderDiagram(graphDefinition, data) {\n    // substitute values inside \"link text\"\n    // this will look for any composite prefixed with a # and substitute the value of the composite\n    // if a series alias is found, in the form #alias, the value will be substituted\n    // this allows link values to be displayed based on the metric\n    graphDefinition = this.substituteHashPrefixedNotation(graphDefinition, data);\n    graphDefinition = this.templateSrv.replaceWithText(graphDefinition);\n    this.diagramType = mermaidAPI.detectType(graphDefinition);\n    var diagramContainer = $(document.getElementById(this.containerDivId));\n    var _this = this;\n    var renderCallback = function(svgCode, bindFunctions) {\n      if (svgCode === '') {\n        diagramContainer.html('There was a problem rendering the graph');\n      } else {\n        diagramContainer.html(svgCode);\n        bindFunctions(diagramContainer[0]);\n        console.debug(\"Inside rendercallback of renderDiagram\");\n        // svgData is empty when this callback happens, update it so the styles will be applied\n        _this.svgData = data;\n        // force a render or we will not see an update\n        _this.render();\n      }\n    };\n    // if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\n    mermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\n  }\n\n  updateDiagram(data) {\n    if (this.panel.content.length > 0) {\n      var mode = this.panel.mode;\n      if (mode == 'url') {\n        var templatedURL = this.templateSrv.replace(this.panel.mermaidServiceUrl, this.panel.scopedVars);\n        var _this = this;\n        this.$http({\n          method: 'GET',\n          url: templatedURL,\n          headers: { 'Accept': 'text/x-mermaid,text/plain;q=0.9,*/*;q=0.8' }\n        }).then(function successCallback(response) {\n          //the response must have text/plain content-type\n          // clearing the diagram here will result in less artifacting waiting for the response\n          _this.clearDiagram();\n          _this.renderDiagram(response.data, data);\n        }, function errorCallback(response) {\n          console.warn('error', response);\n        })\n      } else {\n        this.clearDiagram();\n        this.renderDiagram(this.panel.content, data);\n      }\n    }\n  } // End updateDiagram()\n\n\n\n  /**\n   * substitute values inside \"link text\"\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\n   * if a series alias is found, in the form #alias, the value will be substituted\n   * this allows link values to be displayed based on the metric\n   *\n   * Prefix Modifier For Composites\n   *   # Raw Value of Series\n   *   ! Raw Value plus Metric Name\n   *   @ Formatted (Decimal Limited and Unit Format)\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\n   *\n   * Prefix Modifier For Series\n   *   # Raw Value of Series\n   *   @ Formatted (Decimal Limited and Unit Format)\n   *\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\n   * @param  {[Array]} data [Series Data]\n   * @return {[String]} [Modified Graph Definition]\n   */\n  substituteHashPrefixedNotation(graphDefinition, data) {\n    // inspect the string, locate all # prefixed items, and replace them with the value\n    // of the series. If no matching series is found, leave it alone\n    var matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\n    if (matches === null) return graphDefinition;\n    // check if there is a composite with a matching name\n    for (var i = 0; i < matches.length; i++) {\n      var aMatch = matches[i];\n      var valueType = aMatch[0];\n      aMatch = aMatch.substring(1);\n      // check composites first\n      for (var j = 0; j < this.panel.composites.length; j++) {\n        var aComposite = this.panel.composites[j];\n        if (aComposite.name === aMatch) {\n          // found matching composite, get the valueFormatted\n          var displayedValue = null;\n          switch (valueType) {\n            case '#':\n              displayedValue = data[aComposite.name].value;\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\n              break;\n            case '!':\n              displayedValue = data[aComposite.name].valueRawFormattedWithPrefix;\n              graphDefinition = graphDefinition.replace('!' + aMatch, displayedValue);\n              break;\n            case '@':\n              displayedValue = data[aComposite.name].valueFormatted;\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\n              break;\n            case '&':\n              displayedValue = data[aComposite.name].valueFormattedWithPrefix;\n              graphDefinition = graphDefinition.replace('&' + aMatch, displayedValue);\n              break;\n          }\n        }\n      }\n      // next check series\n      for (var k = 0; k < this.series.length; k++) {\n        var seriesItem = this.series[k];\n        if (seriesItem.alias === aMatch) {\n          var displayedValue = null;\n          switch (valueType) {\n            case '#':\n              displayedValue = data[seriesItem.alias].value;\n              graphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\n              break;\n            case '@':\n              displayedValue = data[seriesItem.alias].valueFormatted;\n              graphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\n              break;\n          }\n        }\n      }\n    }\n    return graphDefinition;\n  }\n\n  setValues() {\n    var data = {};\n    if (this.series && this.series.length > 0) {\n      for (var i = 0; i < this.series.length; i++) {\n        var seriesItem = this.series[i];\n        console.debug('setting values for series');\n        console.debug(seriesItem);\n        data[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\n        var lastPoint = _.last(seriesItem.datapoints);\n        var lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n\n        if (this.panel.valueName === 'name') {\n          data[seriesItem.alias].value = 0;\n          data[seriesItem.alias].valueRounded = 0;\n          data[seriesItem.alias].valueFormated = seriesItem.alias;\n        } else if (_.isString(lastValue)) {\n          data[seriesItem.alias].value = 0;\n          data[seriesItem.alias].valueFormated = _.escape(lastValue);\n          data[seriesItem.alias].valueRounded = 0;\n        } else {\n          data[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\n          var decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\n          var formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\n          // put the value in quotes to escape \"most\" special characters\n          data[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n          data[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\n        }\n        if (this.panel.legend.gradient.enabled) {\n          data[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\n        } else {\n          data[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\n        }\n      }\n    }\n    // Map values to text if needed\n    this.applyValueMapping(data);\n    // now add the composites to data\n    for (var i = 0; i < this.panel.composites.length; i++) {\n      var aComposite = this.panel.composites[i];\n      var currentWorstSeries = null;\n      var currentWorstSeriesName = null;\n      for (var j = 0; j < aComposite.metrics.length; j++) {\n        var aMetric = aComposite.metrics[j];\n        var seriesName = aMetric.seriesName;\n        // For testing\n        console.debug(\"aMetric value: \" + seriesItem.valueFormatted);\n        console.debug(\"aMetric: \" + seriesName);\n        // make sure we have a match\n        if (!data.hasOwnProperty(seriesName)) continue;\n        var seriesItem = data[seriesName];\n        // add the name of the series Item\n        seriesItem.nameOfMetric = seriesName;\n        // check colorData thresholds\n        if (this.isSeriesWorse(currentWorstSeries, seriesItem)) {\n          currentWorstSeries = seriesItem;\n          currentWorstSeriesName = seriesName;\n        }\n      }\n      // Prefix the valueFormatted with the actual metric name\n      if (currentWorstSeries !== null) {\n        currentWorstSeries.valueFormattedWithPrefix = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n        currentWorstSeries.valueRawFormattedWithPrefix = currentWorstSeriesName + ': ' + currentWorstSeries.value;\n        currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n        // now push the composite into data\n        data[aComposite.name] = currentWorstSeries;\n      }\n    }\n    return data;\n  } // End setValues()\n\n  isSeriesWorse(series1, series2) {\n    if (series1 == null) {\n      return true;\n    } else {\n      var series1thresholdLevel = this.getThresholdLevel(series1);\n      var series2thresholdLevel = this.getThresholdLevel(series2);\n      console.debug(\"threshold levels: 1=\" +series1thresholdLevel +\", 2=\" +series2thresholdLevel);\n      return (series2thresholdLevel > series1thresholdLevel);\n    }\n  }\n\n  // returns level of threshold, 0 = ok, 1 = warnimg, 2 = critical\n  getThresholdLevel(series) {\n    // default to ok\n    var thresholdLevel = 0;\n    var value = series.value;\n    var thresholds = series.colorData.thresholds;\n    // if no thresholds are defined, return 0\n    if (thresholds === undefined) {\n      return thresholdLevel;\n    }\n    // make sure thresholds is an array of size 2\n    if (thresholds.length !== 2) {\n      return thresholdLevel;\n    }\n    if (value >= thresholds[0]) {\n      // value is equal or greater than first threshold\n      thresholdLevel = 1;\n    }\n    if (value >= thresholds[1]) {\n      // value is equal or greater than second threshold\n      thresholdLevel = 2;\n    }\n    return thresholdLevel;\n  }\n\n  getGradientForValue(data, value) {\n    console.debug('Getting gradient for value');\n    console.debug(data);\n    console.debug(value);\n    var min = Math.min.apply(Math, data.thresholds);\n    var max = Math.max.apply(Math, data.thresholds);\n    var absoluteDistance = max - min;\n    var valueDistanceFromMin = value - min;\n    var xPercent = valueDistanceFromMin / absoluteDistance;\n    // Get the smaller number to clamp at 0.999 max\n    xPercent = Math.min(0.999, xPercent);\n    // Get the larger number to clamp at 0.001 min\n    xPercent = Math.max(0.001, xPercent);\n    if (data.invertColors) {\n      xPercent = 1 - xPercent;\n    }\n\n    return getColorByXPercentage(this.canvas, xPercent);\n  }\n\n  applyOverrides(seriesItemAlias) {\n    var seriesItem = {},\n      colorData = {},\n      overrides = {};\n\n    console.debug('applying overrides for seriesItem');\n    console.debug(seriesItemAlias);\n    console.debug(this.panel.seriesOverrides);\n    for (var i = 0; i <= this.panel.seriesOverrides.length; i++) {\n      console.debug('comparing:');\n      console.debug(this.panel.seriesOverrides[i]);\n\n      if (this.panel.seriesOverrides[i]) {\n        var regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\n        var matches = seriesItemAlias.match(regex);\n        if (matches && matches.length > 0) {\n          overrides = this.panel.seriesOverrides[i];\n        }\n      }\n    }\n    colorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function(strVale) {\n      return Number(strVale.trim());\n    });\n    colorData.colorMap = this.panel.colors.slice();\n    colorData.invertColors = overrides.invertColors || false;\n    if (colorData.invertColors) {\n      colorData.colorMap.reverse();\n    }\n    seriesItem.colorData = colorData;\n\n    seriesItem.valueName = overrides.valueName || this.panel.valueName;\n\n    seriesItem.format = overrides.unitFormat || this.panel.format;\n    return seriesItem;\n  }\n\n\tapplyValueMapping(data) {\n\t\tfor (let i = 0; i < this.panel.valueMaps.length; i++) {\n\t\t\tvar map = this.panel.valueMaps[i];\n\t\t\tif (! map.hasOwnProperty('alias'))\n\t\t\t\tcontinue;\n\t\t\tvar regex = kbn.stringToJsRegex(map.alias);\n\t\t\tconsole.debug(\"Checking mapping: \" +map.alias);\n\t\t\tfor(let j = 0; j < this.series.length; j++) {\n\t\t\t\tvar matches = this.series[j].alias.match(regex);\n\t\t\t\tconsole.debug(\"  Series: \" +this.series[j].alias);\n\t\t\t\tif (matches && matches.length > 0) {\n\t\t\t\t\tvar seriesItem = this.series[j];\n\t\t\t\t\tvar dataItem = data[seriesItem.alias];\n\t\t\t\t\tif (map.type == 1) {\n\t\t\t\t\t\tfor(let k = 0; k < map.valueToText.length; k++) {\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\t// Value mappings\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\tvar valueMapping = map.valueToText[k];\n\t\t\t\t\t\t\t\tconsole.debug(\"    Mapping: \" +dataItem.valueFormatted +\" =? \" +valueMapping.value);\n\t\t\t\t\t\t\t\tif (valueMapping.value === 'null') {\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} else if (parseFloat(valueMapping.value) == dataItem.valueRounded) {\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = valueMapping.text;\n\t\t\t\t\t\t\t\t\tconsole.debug(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +valueMapping.text);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (map.type == 2) {\n\t\t\t\t\t\tfor(let k = 0; k < map.rangeToText.length; k++) {\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\t// Range Mappings\n\t\t\t\t\t\t\t\t//\t\n\t\t\t\t\t\t\t\tvar rangeMapping = map.rangeToText[k];\n\t\t\t\t\t\t\t\tif (rangeMapping.from === 'null' && rangeNapping.to == 'null') {\n\t\t\t\t\t\t\t\t\tif (dataItem.value === null || dataItem.value === void 0) {\n\t\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeMapping.text;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t} else if (parseFloat(rangeMapping.from) <= dataItem.valueRounded && parseFloat(rangeMapping.to) >= dataItem.valueRounded) {\n\t\t\t\t\t\t\t\t\tdataItem.valueFormatted = rangeMapping.text;\n\t\t\t\t\t\t\t\t\tconsole.debug(\"Map value of series \" +seriesItem.alias +\": \" +dataItem.valueRounded +\" -> \" +rangeMapping.text);\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n  invertColorOrder() {\n    this.panel.colors.reverse();\n    this.refresh();\n  }\n\n  getDecimalsForValue(value) {\n    if (_.isNumber(this.panel.decimals)) {\n      return {\n        decimals: this.panel.decimals,\n        scaledDecimals: null\n      };\n    }\n\n    var delta = value / 2;\n    var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n    var magn = Math.pow(10, -dec),\n      norm = delta / magn, // norm is between 1.0 and 10.0\n      size;\n\n    if (norm < 1.5) {\n      size = 1;\n    } else if (norm < 3) {\n      size = 2;\n      // special case for 2.5, requires an extra decimal\n      if (norm > 2.25) {\n        size = 2.5;\n        ++dec;\n      }\n    } else if (norm < 7.5) {\n      size = 5;\n    } else {\n      size = 10;\n    }\n\n    size *= magn;\n\n    // reduce starting decimals if not needed\n    if (Math.floor(value) === value) {\n      dec = 0;\n    }\n\n    var result = {};\n    result.decimals = Math.max(0, dec);\n    result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n    return result;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    var templateSrv = this.templateSrv;\n    var diagramElement = elem.find('.diagram');\n    diagramElement.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\n    var diagramContainer = $(document.getElementById(ctrl.containerDivId));\n    console.debug('found diagramContainer');\n    console.debug(diagramContainer);\n    elem.css('height', '100%');\n\n    var canvas = elem.find('.canvas')[0];\n    ctrl.canvas = canvas;\n    var gradientValueMax = elem.find('.gradient-value-max')[0];\n    var gradientValueMin = elem.find('.gradient-value-min')[0];\n\n    function updateCanvasStyle() {\n      canvas.width = Math.max(diagramElement[0].clientWidth, 100);\n      var canvasContext = canvas.getContext(\"2d\");\n      canvasContext.clearRect(0, 0, canvas.width, canvas.height);\n\n      var grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\n      var colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\n      for (var i = 0; i < ctrl.panel.colors.length; i++) {\n        var currentColor = ctrl.panel.colors[i];\n        grd.addColorStop(Math.min(colorWidth * i, 1), currentColor);\n      }\n      canvasContext.fillStyle = grd;\n      canvasContext.fillRect(0, 0, canvas.width, 3);\n      ctrl.canvasContext = canvasContext;\n\n      gradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\n      gradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\n    }\n    updateCanvasStyle(); // run once at beginning so the gradients are ready on first data\n\n    function updateStyle() {\n      var data = ctrl.svgData;\n      ctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\n      console.debug('updating svg style');\n      var svg = $(document.getElementById(ctrl.panel.graphId));\n      $(svg).css('min-width', $(svg).css('max-width'));\n      if (ctrl.panel.maxWidth) {\n        $(svg).css('max-width', '100%');\n      }\n\n      if (svg[0] === undefined) {\n        return;\n      }\n\n      for (var key in data) {\n        var seriesItem = data[key];\n        \n        // Find nodes by ID if we can\n        //console.info('finding targetElement');\n        var targetElement = d3.select(svg[0].getElementById(key)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\n        if (targetElement[0][0] !== null) { // probably a flowchart\n          targetElement.selectAll('rect,circle,polygon').style('fill', seriesItem.color);\n\n          var div = targetElement.select('div');\n          var fo = targetElement.select('foreignObject');\n          // make foreign object element taller to accomdate value in FireFox/IE\n          fo.attr('height', 45);\n          // Add value text\n          var p = div.append('p');\n          p.classed('diagram-value');\n          p.style('background-color', seriesItem.color);\n          p.html(seriesItem.valueFormatted);\n        } else {\n          console.debug('finding element that contains id: ' + key);\n          // maybe a flowchart with an alias text node\n          targetElement = $(svg).find('div:contains(\"' + key + '\")').filter(function() {\n            // Matches node name ( 'foo' in both 'foo' and 'foo[bar]')\n            return $(this).attr('id') === key;\n          });\n          if (targetElement.length > 0) {\n            targetElement.parents('.node').find('rect, circle, polygon').css('fill', seriesItem.color);\n            // make foreign object element taller to accomdate value in FireFox/IE\n            targetElement.parents('.node').find('foreignObject').attr('height', 45);\n            // for edge matches\n            var edgeElement = targetElement.parent().find('.edgeLabel');\n            if (edgeElement.length > 0) {\n              edgeElement.css('background-color', 'transparent');\n              edgeElement.append('<br/>' + seriesItem.valueFormatted).addClass('diagram-value');\n              edgeElement.parent('div').css('text-align', 'center').css('background-color', seriesItem.color);\n            } else {\n              var dElement = d3.select(targetElement[0]);\n              // Add value text\n              var p = dElement.append('p');\n              p.classed('diagram-value');\n              p.style('background-color', seriesItem.color);\n              p.html(seriesItem.valueFormatted);\n            }\n          } else {\n            targetElement = $(svg).find('text:contains(\"' + key + '\")'); // sequence diagram, gantt ?\n            if (targetElement.length === 0) {\n              console.debug('couldnt not find a diagram node with id/text: ' + key);\n              continue;\n            }\n            // for node matches\n            targetElement.parent().find('rect, circle, polygon').css('fill', seriesItem.color);\n            targetElement.append('\\n' + seriesItem.valueFormatted);\n          }\n        }\n\n        console.debug(targetElement);\n        console.debug('set nodes:' + key + ' to color:' + seriesItem.color);\n      }\n      //return $(svg).html();\n    } // End updateStyle()\n\n     function render() {\n      updateCanvasStyle();\n      updateStyle();\n    }\n\n    this.events.on('render', function() {\n      render();\n      ctrl.renderingCompleted();\n    });\n  }\n  // End Class\n}\n\nfunction getColorForValue(data, value) {\n  console.debug('Getting color for value');\n  console.debug(data);\n  console.debug(value);\n  for (var i = data.thresholds.length; i > 0; i--) {\n    if (value >= data.thresholds[i - 1]) {\n      console.debug('Color['+(i-1)+']: ' + data.colorMap[i]);\n      return data.colorMap[i-1];\n      //return data.colorMap[i];\n    }\n  }\n  return _.first(data.colorMap);\n}\n\nfunction getColorByXPercentage(canvas, xPercent) {\n  var x = canvas.width * xPercent;\n  var context = canvas.getContext(\"2d\");\n  var p = context.getImageData(x, 1, 1, 1).data;\n  var color = 'rgba(' + [p[0] + ',' + p[1] + ',' + p[2] + ',' + p[3]] + ')';\n  return color;\n}\n\nDiagramCtrl.templateUrl = 'module.html';\n\nexport {\n  DiagramCtrl,\n  DiagramCtrl as MetricsPanelCtrl\n};\n"]}